from sympy import *

a, b, c, AC, BC = symbols('a, b, c, AC, BC', positive = True)
AC2 = a * a + c * c
BC2 = b * b + c * c
print('Detect if Nine-Point Circle tangents Incircle:')
print(expand(81*AC2**2*BC2**2*a**4*b**4 + 18*AC2**2*BC2**2*a**4*b**2*c**2 + AC2**2*BC2**2*a**4*c**4 - 144*AC2**2*BC2**2*a**3*b**3*c**2 - 16*AC2**2*BC2**2*a**3*b*c**4 + 18*AC2**2*BC2**2*a**2*b**4*c**2 + 84*AC2**2*BC2**2*a**2*b**2*c**4 + 2*AC2**2*BC2**2*a**2*c**6 - 16*AC2**2*BC2**2*a*b**3*c**4 - 16*AC2**2*BC2**2*a*b*c**6 + AC2**2*BC2**2*b**4*c**4 + 2*AC2**2*BC2**2*b**2*c**6 + AC2**2*BC2**2*c**8 - 216*AC2**2*BC2*BC*a**4*b**5 - 240*AC2**2*BC2*BC*a**4*b**3*c**2 - 24*AC2**2*BC2*BC*a**4*b*c**4 + 336*AC2**2*BC2*BC*a**3*b**4*c**2 + 352*AC2**2*BC2*BC*a**3*b**2*c**4 + 16*AC2**2*BC2*BC*a**3*c**6 - 96*AC2**2*BC2*BC*a**2*b**5*c**2 - 256*AC2**2*BC2*BC*a**2*b**3*c**4 - 160*AC2**2*BC2*BC*a**2*b*c**6 + 80*AC2**2*BC2*BC*a*b**4*c**4 + 96*AC2**2*BC2*BC*a*b**2*c**6 + 16*AC2**2*BC2*BC*a*c**8 - 8*AC2**2*BC2*BC*b**5*c**4 - 16*AC2**2*BC2*BC*b**3*c**6 - 8*AC2**2*BC2*BC*b*c**8 + 216*AC2**2*BC2*a**4*b**6 + 440*AC2**2*BC2*a**4*b**4*c**2 + 232*AC2**2*BC2*a**4*b**2*c**4 + 8*AC2**2*BC2*a**4*c**6 - 256*AC2**2*BC2*a**3*b**5*c**2 - 512*AC2**2*BC2*a**3*b**3*c**4 - 256*AC2**2*BC2*a**3*b*c**6 + 176*AC2**2*BC2*a**2*b**6*c**2 + 432*AC2**2*BC2*a**2*b**4*c**4 + 336*AC2**2*BC2*a**2*b**2*c**6 + 80*AC2**2*BC2*a**2*c**8 - 128*AC2**2*BC2*a*b**5*c**4 - 256*AC2**2*BC2*a*b**3*c**6 - 128*AC2**2*BC2*a*b*c**8 + 24*AC2**2*BC2*b**6*c**4 + 56*AC2**2*BC2*b**4*c**6 + 40*AC2**2*BC2*b**2*c**8 + 8*AC2**2*BC2*c**10 - 96*AC2**2*BC*a**4*b**7 - 288*AC2**2*BC*a**4*b**5*c**2 - 288*AC2**2*BC*a**4*b**3*c**4 - 96*AC2**2*BC*a**4*b*c**6 + 64*AC2**2*BC*a**3*b**6*c**2 + 192*AC2**2*BC*a**3*b**4*c**4 + 192*AC2**2*BC*a**3*b**2*c**6 + 64*AC2**2*BC*a**3*c**8 - 128*AC2**2*BC*a**2*b**7*c**2 - 384*AC2**2*BC*a**2*b**5*c**4 - 384*AC2**2*BC*a**2*b**3*c**6 - 128*AC2**2*BC*a**2*b*c**8 + 64*AC2**2*BC*a*b**6*c**4 + 192*AC2**2*BC*a*b**4*c**6 + 192*AC2**2*BC*a*b**2*c**8 + 64*AC2**2*BC*a*c**10 - 32*AC2**2*BC*b**7*c**4 - 96*AC2**2*BC*b**5*c**6 - 96*AC2**2*BC*b**3*c**8 - 32*AC2**2*BC*b*c**10 + 16*AC2**2*a**4*b**8 + 64*AC2**2*a**4*b**6*c**2 + 96*AC2**2*a**4*b**4*c**4 + 64*AC2**2*a**4*b**2*c**6 + 16*AC2**2*a**4*c**8 + 32*AC2**2*a**2*b**8*c**2 + 128*AC2**2*a**2*b**6*c**4 + 192*AC2**2*a**2*b**4*c**6 + 128*AC2**2*a**2*b**2*c**8 + 32*AC2**2*a**2*c**10 + 16*AC2**2*b**8*c**4 + 64*AC2**2*b**6*c**6 + 96*AC2**2*b**4*c**8 + 64*AC2**2*b**2*c**10 + 16*AC2**2*c**12 - 216*AC2*AC*BC2**2*a**5*b**4 - 96*AC2*AC*BC2**2*a**5*b**2*c**2 - 8*AC2*AC*BC2**2*a**5*c**4 + 336*AC2*AC*BC2**2*a**4*b**3*c**2 + 80*AC2*AC*BC2**2*a**4*b*c**4 - 240*AC2*AC*BC2**2*a**3*b**4*c**2 - 256*AC2*AC*BC2**2*a**3*b**2*c**4 - 16*AC2*AC*BC2**2*a**3*c**6 + 352*AC2*AC*BC2**2*a**2*b**3*c**4 + 96*AC2*AC*BC2**2*a**2*b*c**6 - 24*AC2*AC*BC2**2*a*b**4*c**4 - 160*AC2*AC*BC2**2*a*b**2*c**6 - 8*AC2*AC*BC2**2*a*c**8 + 16*AC2*AC*BC2**2*b**3*c**6 + 16*AC2*AC*BC2**2*b*c**8 + 360*AC2*AC*BC2*BC*a**5*b**5 + 464*AC2*AC*BC2*BC*a**5*b**3*c**2 + 104*AC2*AC*BC2*BC*a**5*b*c**4 - 520*AC2*AC*BC2*BC*a**4*b**4*c**2 - 592*AC2*AC*BC2*BC*a**4*b**2*c**4 - 72*AC2*AC*BC2*BC*a**4*c**6 + 464*AC2*AC*BC2*BC*a**3*b**5*c**2 + 800*AC2*AC*BC2*BC*a**3*b**3*c**4 + 336*AC2*AC*BC2*BC*a**3*b*c**6 - 592*AC2*AC*BC2*BC*a**2*b**4*c**4 - 672*AC2*AC*BC2*BC*a**2*b**2*c**6 - 80*AC2*AC*BC2*BC*a**2*c**8 + 104*AC2*AC*BC2*BC*a*b**5*c**4 + 336*AC2*AC*BC2*BC*a*b**3*c**6 + 232*AC2*AC*BC2*BC*a*b*c**8 - 72*AC2*AC*BC2*BC*b**4*c**6 - 80*AC2*AC*BC2*BC*b**2*c**8 - 8*AC2*AC*BC2*BC*c**10 - 48*AC2*AC*BC2*a**5*b**6 - 256*AC2*AC*BC2*a**5*b**4*c**2 - 240*AC2*AC*BC2*a**5*b**2*c**4 - 32*AC2*AC*BC2*a**5*c**6 - 48*AC2*AC*BC2*a**4*b**5*c**2 + 160*AC2*AC*BC2*a**4*b**3*c**4 + 208*AC2*AC*BC2*a**4*b*c**6 - 160*AC2*AC*BC2*a**3*b**6*c**2 - 448*AC2*AC*BC2*a**3*b**4*c**4 - 416*AC2*AC*BC2*a**3*b**2*c**6 - 128*AC2*AC*BC2*a**3*c**8 + 32*AC2*AC*BC2*a**2*b**5*c**4 + 320*AC2*AC*BC2*a**2*b**3*c**6 + 288*AC2*AC*BC2*a**2*b*c**8 - 112*AC2*AC*BC2*a*b**6*c**4 - 192*AC2*AC*BC2*a*b**4*c**6 - 176*AC2*AC*BC2*a*b**2*c**8 - 96*AC2*AC*BC2*a*c**10 + 80*AC2*AC*BC2*b**5*c**6 + 160*AC2*AC*BC2*b**3*c**8 + 80*AC2*AC*BC2*b*c**10 - 160*AC2*AC*BC*a**5*b**7 - 288*AC2*AC*BC*a**5*b**5*c**2 - 96*AC2*AC*BC*a**5*b**3*c**4 + 32*AC2*AC*BC*a**5*b*c**6 + 288*AC2*AC*BC*a**4*b**6*c**2 + 544*AC2*AC*BC*a**4*b**4*c**4 + 224*AC2*AC*BC*a**4*b**2*c**6 - 32*AC2*AC*BC*a**4*c**8 - 192*AC2*AC*BC*a**3*b**7*c**2 - 448*AC2*AC*BC*a**3*b**5*c**4 - 320*AC2*AC*BC*a**3*b**3*c**6 - 64*AC2*AC*BC*a**3*b*c**8 + 320*AC2*AC*BC*a**2*b**6*c**4 + 576*AC2*AC*BC*a**2*b**4*c**6 + 192*AC2*AC*BC*a**2*b**2*c**8 - 64*AC2*AC*BC*a**2*c**10 - 32*AC2*AC*BC*a*b**7*c**4 - 160*AC2*AC*BC*a*b**5*c**6 - 224*AC2*AC*BC*a*b**3*c**8 - 96*AC2*AC*BC*a*b*c**10 + 32*AC2*AC*BC*b**6*c**6 + 32*AC2*AC*BC*b**4*c**8 - 32*AC2*AC*BC*b**2*c**10 - 32*AC2*AC*BC*c**12 + 64*AC2*AC*a**5*b**8 + 192*AC2*AC*a**5*b**6*c**2 + 192*AC2*AC*a**5*b**4*c**4 + 64*AC2*AC*a**5*b**2*c**6 - 64*AC2*AC*a**4*b**7*c**2 - 192*AC2*AC*a**4*b**5*c**4 - 192*AC2*AC*a**4*b**3*c**6 - 64*AC2*AC*a**4*b*c**8 + 128*AC2*AC*a**3*b**8*c**2 + 384*AC2*AC*a**3*b**6*c**4 + 384*AC2*AC*a**3*b**4*c**6 + 128*AC2*AC*a**3*b**2*c**8 - 128*AC2*AC*a**2*b**7*c**4 - 384*AC2*AC*a**2*b**5*c**6 - 384*AC2*AC*a**2*b**3*c**8 - 128*AC2*AC*a**2*b*c**10 + 64*AC2*AC*a*b**8*c**4 + 192*AC2*AC*a*b**6*c**6 + 192*AC2*AC*a*b**4*c**8 + 64*AC2*AC*a*b**2*c**10 - 64*AC2*AC*b**7*c**6 - 192*AC2*AC*b**5*c**8 - 192*AC2*AC*b**3*c**10 - 64*AC2*AC*b*c**12 + 216*AC2*BC2**2*a**6*b**4 + 176*AC2*BC2**2*a**6*b**2*c**2 + 24*AC2*BC2**2*a**6*c**4 - 256*AC2*BC2**2*a**5*b**3*c**2 - 128*AC2*BC2**2*a**5*b*c**4 + 440*AC2*BC2**2*a**4*b**4*c**2 + 432*AC2*BC2**2*a**4*b**2*c**4 + 56*AC2*BC2**2*a**4*c**6 - 512*AC2*BC2**2*a**3*b**3*c**4 - 256*AC2*BC2**2*a**3*b*c**6 + 232*AC2*BC2**2*a**2*b**4*c**4 + 336*AC2*BC2**2*a**2*b**2*c**6 + 40*AC2*BC2**2*a**2*c**8 - 256*AC2*BC2**2*a*b**3*c**6 - 128*AC2*BC2**2*a*b*c**8 + 8*AC2*BC2**2*b**4*c**6 + 80*AC2*BC2**2*b**2*c**8 + 8*AC2*BC2**2*c**10 - 48*AC2*BC2*BC*a**6*b**5 - 160*AC2*BC2*BC*a**6*b**3*c**2 - 112*AC2*BC2*BC*a**6*b*c**4 - 48*AC2*BC2*BC*a**5*b**4*c**2 + 32*AC2*BC2*BC*a**5*b**2*c**4 + 80*AC2*BC2*BC*a**5*c**6 - 256*AC2*BC2*BC*a**4*b**5*c**2 - 448*AC2*BC2*BC*a**4*b**3*c**4 - 192*AC2*BC2*BC*a**4*b*c**6 + 160*AC2*BC2*BC*a**3*b**4*c**4 + 320*AC2*BC2*BC*a**3*b**2*c**6 + 160*AC2*BC2*BC*a**3*c**8 - 240*AC2*BC2*BC*a**2*b**5*c**4 - 416*AC2*BC2*BC*a**2*b**3*c**6 - 176*AC2*BC2*BC*a**2*b*c**8 + 208*AC2*BC2*BC*a*b**4*c**6 + 288*AC2*BC2*BC*a*b**2*c**8 + 80*AC2*BC2*BC*a*c**10 - 32*AC2*BC2*BC*b**5*c**6 - 128*AC2*BC2*BC*b**3*c**8 - 96*AC2*BC2*BC*b*c**10 - 570*AC2*BC2*a**6*b**6 - 862*AC2*BC2*a**6*b**4*c**2 - 270*AC2*BC2*a**6*b**2*c**4 + 22*AC2*BC2*a**6*c**6 + 960*AC2*BC2*a**5*b**5*c**2 + 1408*AC2*BC2*a**5*b**3*c**4 + 448*AC2*BC2*a**5*b*c**6 - 862*AC2*BC2*a**4*b**6*c**2 - 1642*AC2*BC2*a**4*b**4*c**4 - 826*AC2*BC2*a**4*b**2*c**6 - 46*AC2*BC2*a**4*c**8 + 1408*AC2*BC2*a**3*b**5*c**4 + 2048*AC2*BC2*a**3*b**3*c**6 + 640*AC2*BC2*a**3*b*c**8 - 270*AC2*BC2*a**2*b**6*c**4 - 826*AC2*BC2*a**2*b**4*c**6 - 586*AC2*BC2*a**2*b**2*c**8 - 30*AC2*BC2*a**2*c**10 + 448*AC2*BC2*a*b**5*c**6 + 640*AC2*BC2*a*b**3*c**8 + 192*AC2*BC2*a*b*c**10 + 22*AC2*BC2*b**6*c**6 - 46*AC2*BC2*b**4*c**8 - 30*AC2*BC2*b**2*c**10 + 38*AC2*BC2*c**12 + 440*AC2*BC*a**6*b**7 + 1064*AC2*BC*a**6*b**5*c**2 + 808*AC2*BC*a**6*b**3*c**4 + 184*AC2*BC*a**6*b*c**6 - 592*AC2*BC*a**5*b**6*c**2 - 1328*AC2*BC*a**5*b**4*c**4 - 880*AC2*BC*a**5*b**2*c**6 - 144*AC2*BC*a**5*c**8 + 792*AC2*BC*a**4*b**7*c**2 + 2184*AC2*BC*a**4*b**5*c**4 + 1992*AC2*BC*a**4*b**3*c**6 + 600*AC2*BC*a**4*b*c**8 - 928*AC2*BC*a**3*b**6*c**4 - 2144*AC2*BC*a**3*b**4*c**6 - 1504*AC2*BC*a**3*b**2*c**8 - 288*AC2*BC*a**3*c**10 + 392*AC2*BC*a**2*b**7*c**4 + 1304*AC2*BC*a**2*b**5*c**6 + 1432*AC2*BC*a**2*b**3*c**8 + 520*AC2*BC*a**2*b*c**10 - 336*AC2*BC*a*b**6*c**6 - 816*AC2*BC*a*b**4*c**8 - 624*AC2*BC*a*b**2*c**10 - 144*AC2*BC*a*c**12 + 40*AC2*BC*b**7*c**6 + 184*AC2*BC*b**5*c**8 + 248*AC2*BC*b**3*c**10 + 104*AC2*BC*b*c**12 - 40*AC2*a**6*b**8 - 224*AC2*a**6*b**6*c**2 - 368*AC2*a**6*b**4*c**4 - 224*AC2*a**6*b**2*c**6 - 40*AC2*a**6*c**8 - 64*AC2*a**5*b**7*c**2 - 64*AC2*a**5*b**5*c**4 + 64*AC2*a**5*b**3*c**6 + 64*AC2*a**5*b*c**8 - 120*AC2*a**4*b**8*c**2 - 544*AC2*a**4*b**6*c**4 - 848*AC2*a**4*b**4*c**6 - 544*AC2*a**4*b**2*c**8 - 120*AC2*a**4*c**10 - 128*AC2*a**3*b**7*c**4 - 128*AC2*a**3*b**5*c**6 + 128*AC2*a**3*b**3*c**8 + 128*AC2*a**3*b*c**10 - 120*AC2*a**2*b**8*c**4 - 416*AC2*a**2*b**6*c**6 - 592*AC2*a**2*b**4*c**8 - 416*AC2*a**2*b**2*c**10 - 120*AC2*a**2*c**12 - 64*AC2*a*b**7*c**6 - 64*AC2*a*b**5*c**8 + 64*AC2*a*b**3*c**10 + 64*AC2*a*b*c**12 - 40*AC2*b**8*c**6 - 96*AC2*b**6*c**8 - 112*AC2*b**4*c**10 - 96*AC2*b**2*c**12 - 40*AC2*c**14 - 96*AC*BC2**2*a**7*b**4 - 128*AC*BC2**2*a**7*b**2*c**2 - 32*AC*BC2**2*a**7*c**4 + 64*AC*BC2**2*a**6*b**3*c**2 + 64*AC*BC2**2*a**6*b*c**4 - 288*AC*BC2**2*a**5*b**4*c**2 - 384*AC*BC2**2*a**5*b**2*c**4 - 96*AC*BC2**2*a**5*c**6 + 192*AC*BC2**2*a**4*b**3*c**4 + 192*AC*BC2**2*a**4*b*c**6 - 288*AC*BC2**2*a**3*b**4*c**4 - 384*AC*BC2**2*a**3*b**2*c**6 - 96*AC*BC2**2*a**3*c**8 + 192*AC*BC2**2*a**2*b**3*c**6 + 192*AC*BC2**2*a**2*b*c**8 - 96*AC*BC2**2*a*b**4*c**6 - 128*AC*BC2**2*a*b**2*c**8 - 32*AC*BC2**2*a*c**10 + 64*AC*BC2**2*b**3*c**8 + 64*AC*BC2**2*b*c**10 - 160*AC*BC2*BC*a**7*b**5 - 192*AC*BC2*BC*a**7*b**3*c**2 - 32*AC*BC2*BC*a**7*b*c**4 + 288*AC*BC2*BC*a**6*b**4*c**2 + 320*AC*BC2*BC*a**6*b**2*c**4 + 32*AC*BC2*BC*a**6*c**6 - 288*AC*BC2*BC*a**5*b**5*c**2 - 448*AC*BC2*BC*a**5*b**3*c**4 - 160*AC*BC2*BC*a**5*b*c**6 + 544*AC*BC2*BC*a**4*b**4*c**4 + 576*AC*BC2*BC*a**4*b**2*c**6 + 32*AC*BC2*BC*a**4*c**8 - 96*AC*BC2*BC*a**3*b**5*c**4 - 320*AC*BC2*BC*a**3*b**3*c**6 - 224*AC*BC2*BC*a**3*b*c**8 + 224*AC*BC2*BC*a**2*b**4*c**6 + 192*AC*BC2*BC*a**2*b**2*c**8 - 32*AC*BC2*BC*a**2*c**10 + 32*AC*BC2*BC*a*b**5*c**6 - 64*AC*BC2*BC*a*b**3*c**8 - 96*AC*BC2*BC*a*b*c**10 - 32*AC*BC2*BC*b**4*c**8 - 64*AC*BC2*BC*b**2*c**10 - 32*AC*BC2*BC*c**12 + 440*AC*BC2*a**7*b**6 + 792*AC*BC2*a**7*b**4*c**2 + 392*AC*BC2*a**7*b**2*c**4 + 40*AC*BC2*a**7*c**6 - 592*AC*BC2*a**6*b**5*c**2 - 928*AC*BC2*a**6*b**3*c**4 - 336*AC*BC2*a**6*b*c**6 + 1064*AC*BC2*a**5*b**6*c**2 + 2184*AC*BC2*a**5*b**4*c**4 + 1304*AC*BC2*a**5*b**2*c**6 + 184*AC*BC2*a**5*c**8 - 1328*AC*BC2*a**4*b**5*c**4 - 2144*AC*BC2*a**4*b**3*c**6 - 816*AC*BC2*a**4*b*c**8 + 808*AC*BC2*a**3*b**6*c**4 + 1992*AC*BC2*a**3*b**4*c**6 + 1432*AC*BC2*a**3*b**2*c**8 + 248*AC*BC2*a**3*c**10 - 880*AC*BC2*a**2*b**5*c**6 - 1504*AC*BC2*a**2*b**3*c**8 - 624*AC*BC2*a**2*b*c**10 + 184*AC*BC2*a*b**6*c**6 + 600*AC*BC2*a*b**4*c**8 + 520*AC*BC2*a*b**2*c**10 + 104*AC*BC2*a*c**12 - 144*AC*BC2*b**5*c**8 - 288*AC*BC2*b**3*c**10 - 144*AC*BC2*b*c**12 - 40*AC*BC*a**7*b**7 - 184*AC*BC*a**7*b**5*c**2 - 248*AC*BC*a**7*b**3*c**4 - 104*AC*BC*a**7*b*c**6 - 56*AC*BC*a**6*b**6*c**2 - 40*AC*BC*a**6*b**4*c**4 + 88*AC*BC*a**6*b**2*c**6 + 72*AC*BC*a**6*c**8 - 184*AC*BC*a**5*b**7*c**2 - 616*AC*BC*a**5*b**5*c**4 - 680*AC*BC*a**5*b**3*c**6 - 248*AC*BC*a**5*b*c**8 - 40*AC*BC*a**4*b**6*c**4 + 136*AC*BC*a**4*b**4*c**6 + 392*AC*BC*a**4*b**2*c**8 + 216*AC*BC*a**4*c**10 - 248*AC*BC*a**3*b**7*c**4 - 680*AC*BC*a**3*b**5*c**6 - 616*AC*BC*a**3*b**3*c**8 - 184*AC*BC*a**3*b*c**10 + 88*AC*BC*a**2*b**6*c**6 + 392*AC*BC*a**2*b**4*c**8 + 520*AC*BC*a**2*b**2*c**10 + 216*AC*BC*a**2*c**12 - 104*AC*BC*a*b**7*c**6 - 248*AC*BC*a*b**5*c**8 - 184*AC*BC*a*b**3*c**10 - 40*AC*BC*a*b*c**12 + 72*AC*BC*b**6*c**8 + 216*AC*BC*b**4*c**10 + 216*AC*BC*b**2*c**12 + 72*AC*BC*c**14 - 144*AC*a**7*b**8 - 272*AC*a**7*b**6*c**2 - 80*AC*a**7*b**4*c**4 + 80*AC*a**7*b**2*c**6 + 32*AC*a**7*c**8 + 304*AC*a**6*b**7*c**2 + 656*AC*a**6*b**5*c**4 + 400*AC*a**6*b**3*c**6 + 48*AC*a**6*b*c**8 - 304*AC*a**5*b**8*c**2 - 688*AC*a**5*b**6*c**4 - 368*AC*a**5*b**4*c**6 + 112*AC*a**5*b**2*c**8 + 96*AC*a**5*c**10 + 656*AC*a**4*b**7*c**4 + 1456*AC*a**4*b**5*c**6 + 944*AC*a**4*b**3*c**8 + 144*AC*a**4*b*c**10 - 176*AC*a**3*b**8*c**4 - 560*AC*a**3*b**6*c**6 - 496*AC*a**3*b**4*c**8 - 16*AC*a**3*b**2*c**10 + 96*AC*a**3*c**12 + 400*AC*a**2*b**7*c**6 + 944*AC*a**2*b**5*c**8 + 688*AC*a**2*b**3*c**10 + 144*AC*a**2*b*c**12 - 16*AC*a*b**8*c**6 - 144*AC*a*b**6*c**8 - 208*AC*a*b**4*c**10 - 48*AC*a*b**2*c**12 + 32*AC*a*c**14 + 48*AC*b**7*c**8 + 144*AC*b**5*c**10 + 144*AC*b**3*c**12 + 48*AC*b*c**14 + 16*BC2**2*a**8*b**4 + 32*BC2**2*a**8*b**2*c**2 + 16*BC2**2*a**8*c**4 + 64*BC2**2*a**6*b**4*c**2 + 128*BC2**2*a**6*b**2*c**4 + 64*BC2**2*a**6*c**6 + 96*BC2**2*a**4*b**4*c**4 + 192*BC2**2*a**4*b**2*c**6 + 96*BC2**2*a**4*c**8 + 64*BC2**2*a**2*b**4*c**6 + 128*BC2**2*a**2*b**2*c**8 + 64*BC2**2*a**2*c**10 + 16*BC2**2*b**4*c**8 + 32*BC2**2*b**2*c**10 + 16*BC2**2*c**12 + 64*BC2*BC*a**8*b**5 + 128*BC2*BC*a**8*b**3*c**2 + 64*BC2*BC*a**8*b*c**4 - 64*BC2*BC*a**7*b**4*c**2 - 128*BC2*BC*a**7*b**2*c**4 - 64*BC2*BC*a**7*c**6 + 192*BC2*BC*a**6*b**5*c**2 + 384*BC2*BC*a**6*b**3*c**4 + 192*BC2*BC*a**6*b*c**6 - 192*BC2*BC*a**5*b**4*c**4 - 384*BC2*BC*a**5*b**2*c**6 - 192*BC2*BC*a**5*c**8 + 192*BC2*BC*a**4*b**5*c**4 + 384*BC2*BC*a**4*b**3*c**6 + 192*BC2*BC*a**4*b*c**8 - 192*BC2*BC*a**3*b**4*c**6 - 384*BC2*BC*a**3*b**2*c**8 - 192*BC2*BC*a**3*c**10 + 64*BC2*BC*a**2*b**5*c**6 + 128*BC2*BC*a**2*b**3*c**8 + 64*BC2*BC*a**2*b*c**10 - 64*BC2*BC*a*b**4*c**8 - 128*BC2*BC*a*b**2*c**10 - 64*BC2*BC*a*c**12 - 40*BC2*a**8*b**6 - 120*BC2*a**8*b**4*c**2 - 120*BC2*a**8*b**2*c**4 - 40*BC2*a**8*c**6 - 64*BC2*a**7*b**5*c**2 - 128*BC2*a**7*b**3*c**4 - 64*BC2*a**7*b*c**6 - 224*BC2*a**6*b**6*c**2 - 544*BC2*a**6*b**4*c**4 - 416*BC2*a**6*b**2*c**6 - 96*BC2*a**6*c**8 - 64*BC2*a**5*b**5*c**4 - 128*BC2*a**5*b**3*c**6 - 64*BC2*a**5*b*c**8 - 368*BC2*a**4*b**6*c**4 - 848*BC2*a**4*b**4*c**6 - 592*BC2*a**4*b**2*c**8 - 112*BC2*a**4*c**10 + 64*BC2*a**3*b**5*c**6 + 128*BC2*a**3*b**3*c**8 + 64*BC2*a**3*b*c**10 - 224*BC2*a**2*b**6*c**6 - 544*BC2*a**2*b**4*c**8 - 416*BC2*a**2*b**2*c**10 - 96*BC2*a**2*c**12 + 64*BC2*a*b**5*c**8 + 128*BC2*a*b**3*c**10 + 64*BC2*a*b*c**12 - 40*BC2*b**6*c**8 - 120*BC2*b**4*c**10 - 120*BC2*b**2*c**12 - 40*BC2*c**14 - 144*BC*a**8*b**7 - 304*BC*a**8*b**5*c**2 - 176*BC*a**8*b**3*c**4 - 16*BC*a**8*b*c**6 + 304*BC*a**7*b**6*c**2 + 656*BC*a**7*b**4*c**4 + 400*BC*a**7*b**2*c**6 + 48*BC*a**7*c**8 - 272*BC*a**6*b**7*c**2 - 688*BC*a**6*b**5*c**4 - 560*BC*a**6*b**3*c**6 - 144*BC*a**6*b*c**8 + 656*BC*a**5*b**6*c**4 + 1456*BC*a**5*b**4*c**6 + 944*BC*a**5*b**2*c**8 + 144*BC*a**5*c**10 - 80*BC*a**4*b**7*c**4 - 368*BC*a**4*b**5*c**6 - 496*BC*a**4*b**3*c**8 - 208*BC*a**4*b*c**10 + 400*BC*a**3*b**6*c**6 + 944*BC*a**3*b**4*c**8 + 688*BC*a**3*b**2*c**10 + 144*BC*a**3*c**12 + 80*BC*a**2*b**7*c**6 + 112*BC*a**2*b**5*c**8 - 16*BC*a**2*b**3*c**10 - 48*BC*a**2*b*c**12 + 48*BC*a*b**6*c**8 + 144*BC*a*b**4*c**10 + 144*BC*a*b**2*c**12 + 48*BC*a*c**14 + 32*BC*b**7*c**8 + 96*BC*b**5*c**10 + 96*BC*b**3*c**12 + 32*BC*b*c**14 + 105*a**8*b**8 + 244*a**8*b**6*c**2 + 166*a**8*b**4*c**4 + 20*a**8*b**2*c**6 - 7*a**8*c**8 - 176*a**7*b**7*c**2 - 400*a**7*b**5*c**4 - 272*a**7*b**3*c**6 - 48*a**7*b*c**8 + 244*a**6*b**8*c**2 + 640*a**6*b**6*c**4 + 520*a**6*b**4*c**6 + 96*a**6*b**2*c**8 - 28*a**6*c**10 - 400*a**5*b**7*c**4 - 944*a**5*b**5*c**6 - 688*a**5*b**3*c**8 - 144*a**5*b*c**10 + 166*a**4*b**8*c**4 + 520*a**4*b**6*c**6 + 500*a**4*b**4*c**8 + 104*a**4*b**2*c**10 - 42*a**4*c**12 - 272*a**3*b**7*c**6 - 688*a**3*b**5*c**8 - 560*a**3*b**3*c**10 - 144*a**3*b*c**12 + 20*a**2*b**8*c**6 + 96*a**2*b**6*c**8 + 104*a**2*b**4*c**10 - 28*a**2*c**14 - 48*a*b**7*c**8 - 144*a*b**5*c**10 - 144*a*b**3*c**12 - 48*a*b*c**14 - 7*b**8*c**8 - 28*b**6*c**10 - 42*b**4*c**12 - 28*b**2*c**14 - 7*c**16))
print('Detect if Nine-Point Circle tangents Excircle:')
print(expand(81*AC2**2*BC2**2*a**4*b**4 + 18*AC2**2*BC2**2*a**4*b**2*c**2 + AC2**2*BC2**2*a**4*c**4 - 144*AC2**2*BC2**2*a**3*b**3*c**2 - 16*AC2**2*BC2**2*a**3*b*c**4 + 18*AC2**2*BC2**2*a**2*b**4*c**2 + 84*AC2**2*BC2**2*a**2*b**2*c**4 + 2*AC2**2*BC2**2*a**2*c**6 - 16*AC2**2*BC2**2*a*b**3*c**4 - 16*AC2**2*BC2**2*a*b*c**6 + AC2**2*BC2**2*b**4*c**4 + 2*AC2**2*BC2**2*b**2*c**6 + AC2**2*BC2**2*c**8 + 216*AC2**2*BC2*BC*a**4*b**5 + 240*AC2**2*BC2*BC*a**4*b**3*c**2 + 24*AC2**2*BC2*BC*a**4*b*c**4 - 336*AC2**2*BC2*BC*a**3*b**4*c**2 - 352*AC2**2*BC2*BC*a**3*b**2*c**4 - 16*AC2**2*BC2*BC*a**3*c**6 + 96*AC2**2*BC2*BC*a**2*b**5*c**2 + 256*AC2**2*BC2*BC*a**2*b**3*c**4 + 160*AC2**2*BC2*BC*a**2*b*c**6 - 80*AC2**2*BC2*BC*a*b**4*c**4 - 96*AC2**2*BC2*BC*a*b**2*c**6 - 16*AC2**2*BC2*BC*a*c**8 + 8*AC2**2*BC2*BC*b**5*c**4 + 16*AC2**2*BC2*BC*b**3*c**6 + 8*AC2**2*BC2*BC*b*c**8 + 216*AC2**2*BC2*a**4*b**6 + 440*AC2**2*BC2*a**4*b**4*c**2 + 232*AC2**2*BC2*a**4*b**2*c**4 + 8*AC2**2*BC2*a**4*c**6 - 256*AC2**2*BC2*a**3*b**5*c**2 - 512*AC2**2*BC2*a**3*b**3*c**4 - 256*AC2**2*BC2*a**3*b*c**6 + 176*AC2**2*BC2*a**2*b**6*c**2 + 432*AC2**2*BC2*a**2*b**4*c**4 + 336*AC2**2*BC2*a**2*b**2*c**6 + 80*AC2**2*BC2*a**2*c**8 - 128*AC2**2*BC2*a*b**5*c**4 - 256*AC2**2*BC2*a*b**3*c**6 - 128*AC2**2*BC2*a*b*c**8 + 24*AC2**2*BC2*b**6*c**4 + 56*AC2**2*BC2*b**4*c**6 + 40*AC2**2*BC2*b**2*c**8 + 8*AC2**2*BC2*c**10 + 96*AC2**2*BC*a**4*b**7 + 288*AC2**2*BC*a**4*b**5*c**2 + 288*AC2**2*BC*a**4*b**3*c**4 + 96*AC2**2*BC*a**4*b*c**6 - 64*AC2**2*BC*a**3*b**6*c**2 - 192*AC2**2*BC*a**3*b**4*c**4 - 192*AC2**2*BC*a**3*b**2*c**6 - 64*AC2**2*BC*a**3*c**8 + 128*AC2**2*BC*a**2*b**7*c**2 + 384*AC2**2*BC*a**2*b**5*c**4 + 384*AC2**2*BC*a**2*b**3*c**6 + 128*AC2**2*BC*a**2*b*c**8 - 64*AC2**2*BC*a*b**6*c**4 - 192*AC2**2*BC*a*b**4*c**6 - 192*AC2**2*BC*a*b**2*c**8 - 64*AC2**2*BC*a*c**10 + 32*AC2**2*BC*b**7*c**4 + 96*AC2**2*BC*b**5*c**6 + 96*AC2**2*BC*b**3*c**8 + 32*AC2**2*BC*b*c**10 + 16*AC2**2*a**4*b**8 + 64*AC2**2*a**4*b**6*c**2 + 96*AC2**2*a**4*b**4*c**4 + 64*AC2**2*a**4*b**2*c**6 + 16*AC2**2*a**4*c**8 + 32*AC2**2*a**2*b**8*c**2 + 128*AC2**2*a**2*b**6*c**4 + 192*AC2**2*a**2*b**4*c**6 + 128*AC2**2*a**2*b**2*c**8 + 32*AC2**2*a**2*c**10 + 16*AC2**2*b**8*c**4 + 64*AC2**2*b**6*c**6 + 96*AC2**2*b**4*c**8 + 64*AC2**2*b**2*c**10 + 16*AC2**2*c**12 + 216*AC2*AC*BC2**2*a**5*b**4 + 96*AC2*AC*BC2**2*a**5*b**2*c**2 + 8*AC2*AC*BC2**2*a**5*c**4 - 336*AC2*AC*BC2**2*a**4*b**3*c**2 - 80*AC2*AC*BC2**2*a**4*b*c**4 + 240*AC2*AC*BC2**2*a**3*b**4*c**2 + 256*AC2*AC*BC2**2*a**3*b**2*c**4 + 16*AC2*AC*BC2**2*a**3*c**6 - 352*AC2*AC*BC2**2*a**2*b**3*c**4 - 96*AC2*AC*BC2**2*a**2*b*c**6 + 24*AC2*AC*BC2**2*a*b**4*c**4 + 160*AC2*AC*BC2**2*a*b**2*c**6 + 8*AC2*AC*BC2**2*a*c**8 - 16*AC2*AC*BC2**2*b**3*c**6 - 16*AC2*AC*BC2**2*b*c**8 + 360*AC2*AC*BC2*BC*a**5*b**5 + 464*AC2*AC*BC2*BC*a**5*b**3*c**2 + 104*AC2*AC*BC2*BC*a**5*b*c**4 - 520*AC2*AC*BC2*BC*a**4*b**4*c**2 - 592*AC2*AC*BC2*BC*a**4*b**2*c**4 - 72*AC2*AC*BC2*BC*a**4*c**6 + 464*AC2*AC*BC2*BC*a**3*b**5*c**2 + 800*AC2*AC*BC2*BC*a**3*b**3*c**4 + 336*AC2*AC*BC2*BC*a**3*b*c**6 - 592*AC2*AC*BC2*BC*a**2*b**4*c**4 - 672*AC2*AC*BC2*BC*a**2*b**2*c**6 - 80*AC2*AC*BC2*BC*a**2*c**8 + 104*AC2*AC*BC2*BC*a*b**5*c**4 + 336*AC2*AC*BC2*BC*a*b**3*c**6 + 232*AC2*AC*BC2*BC*a*b*c**8 - 72*AC2*AC*BC2*BC*b**4*c**6 - 80*AC2*AC*BC2*BC*b**2*c**8 - 8*AC2*AC*BC2*BC*c**10 + 48*AC2*AC*BC2*a**5*b**6 + 256*AC2*AC*BC2*a**5*b**4*c**2 + 240*AC2*AC*BC2*a**5*b**2*c**4 + 32*AC2*AC*BC2*a**5*c**6 + 48*AC2*AC*BC2*a**4*b**5*c**2 - 160*AC2*AC*BC2*a**4*b**3*c**4 - 208*AC2*AC*BC2*a**4*b*c**6 + 160*AC2*AC*BC2*a**3*b**6*c**2 + 448*AC2*AC*BC2*a**3*b**4*c**4 + 416*AC2*AC*BC2*a**3*b**2*c**6 + 128*AC2*AC*BC2*a**3*c**8 - 32*AC2*AC*BC2*a**2*b**5*c**4 - 320*AC2*AC*BC2*a**2*b**3*c**6 - 288*AC2*AC*BC2*a**2*b*c**8 + 112*AC2*AC*BC2*a*b**6*c**4 + 192*AC2*AC*BC2*a*b**4*c**6 + 176*AC2*AC*BC2*a*b**2*c**8 + 96*AC2*AC*BC2*a*c**10 - 80*AC2*AC*BC2*b**5*c**6 - 160*AC2*AC*BC2*b**3*c**8 - 80*AC2*AC*BC2*b*c**10 - 160*AC2*AC*BC*a**5*b**7 - 288*AC2*AC*BC*a**5*b**5*c**2 - 96*AC2*AC*BC*a**5*b**3*c**4 + 32*AC2*AC*BC*a**5*b*c**6 + 288*AC2*AC*BC*a**4*b**6*c**2 + 544*AC2*AC*BC*a**4*b**4*c**4 + 224*AC2*AC*BC*a**4*b**2*c**6 - 32*AC2*AC*BC*a**4*c**8 - 192*AC2*AC*BC*a**3*b**7*c**2 - 448*AC2*AC*BC*a**3*b**5*c**4 - 320*AC2*AC*BC*a**3*b**3*c**6 - 64*AC2*AC*BC*a**3*b*c**8 + 320*AC2*AC*BC*a**2*b**6*c**4 + 576*AC2*AC*BC*a**2*b**4*c**6 + 192*AC2*AC*BC*a**2*b**2*c**8 - 64*AC2*AC*BC*a**2*c**10 - 32*AC2*AC*BC*a*b**7*c**4 - 160*AC2*AC*BC*a*b**5*c**6 - 224*AC2*AC*BC*a*b**3*c**8 - 96*AC2*AC*BC*a*b*c**10 + 32*AC2*AC*BC*b**6*c**6 + 32*AC2*AC*BC*b**4*c**8 - 32*AC2*AC*BC*b**2*c**10 - 32*AC2*AC*BC*c**12 - 64*AC2*AC*a**5*b**8 - 192*AC2*AC*a**5*b**6*c**2 - 192*AC2*AC*a**5*b**4*c**4 - 64*AC2*AC*a**5*b**2*c**6 + 64*AC2*AC*a**4*b**7*c**2 + 192*AC2*AC*a**4*b**5*c**4 + 192*AC2*AC*a**4*b**3*c**6 + 64*AC2*AC*a**4*b*c**8 - 128*AC2*AC*a**3*b**8*c**2 - 384*AC2*AC*a**3*b**6*c**4 - 384*AC2*AC*a**3*b**4*c**6 - 128*AC2*AC*a**3*b**2*c**8 + 128*AC2*AC*a**2*b**7*c**4 + 384*AC2*AC*a**2*b**5*c**6 + 384*AC2*AC*a**2*b**3*c**8 + 128*AC2*AC*a**2*b*c**10 - 64*AC2*AC*a*b**8*c**4 - 192*AC2*AC*a*b**6*c**6 - 192*AC2*AC*a*b**4*c**8 - 64*AC2*AC*a*b**2*c**10 + 64*AC2*AC*b**7*c**6 + 192*AC2*AC*b**5*c**8 + 192*AC2*AC*b**3*c**10 + 64*AC2*AC*b*c**12 + 216*AC2*BC2**2*a**6*b**4 + 176*AC2*BC2**2*a**6*b**2*c**2 + 24*AC2*BC2**2*a**6*c**4 - 256*AC2*BC2**2*a**5*b**3*c**2 - 128*AC2*BC2**2*a**5*b*c**4 + 440*AC2*BC2**2*a**4*b**4*c**2 + 432*AC2*BC2**2*a**4*b**2*c**4 + 56*AC2*BC2**2*a**4*c**6 - 512*AC2*BC2**2*a**3*b**3*c**4 - 256*AC2*BC2**2*a**3*b*c**6 + 232*AC2*BC2**2*a**2*b**4*c**4 + 336*AC2*BC2**2*a**2*b**2*c**6 + 40*AC2*BC2**2*a**2*c**8 - 256*AC2*BC2**2*a*b**3*c**6 - 128*AC2*BC2**2*a*b*c**8 + 8*AC2*BC2**2*b**4*c**6 + 80*AC2*BC2**2*b**2*c**8 + 8*AC2*BC2**2*c**10 + 48*AC2*BC2*BC*a**6*b**5 + 160*AC2*BC2*BC*a**6*b**3*c**2 + 112*AC2*BC2*BC*a**6*b*c**4 + 48*AC2*BC2*BC*a**5*b**4*c**2 - 32*AC2*BC2*BC*a**5*b**2*c**4 - 80*AC2*BC2*BC*a**5*c**6 + 256*AC2*BC2*BC*a**4*b**5*c**2 + 448*AC2*BC2*BC*a**4*b**3*c**4 + 192*AC2*BC2*BC*a**4*b*c**6 - 160*AC2*BC2*BC*a**3*b**4*c**4 - 320*AC2*BC2*BC*a**3*b**2*c**6 - 160*AC2*BC2*BC*a**3*c**8 + 240*AC2*BC2*BC*a**2*b**5*c**4 + 416*AC2*BC2*BC*a**2*b**3*c**6 + 176*AC2*BC2*BC*a**2*b*c**8 - 208*AC2*BC2*BC*a*b**4*c**6 - 288*AC2*BC2*BC*a*b**2*c**8 - 80*AC2*BC2*BC*a*c**10 + 32*AC2*BC2*BC*b**5*c**6 + 128*AC2*BC2*BC*b**3*c**8 + 96*AC2*BC2*BC*b*c**10 - 570*AC2*BC2*a**6*b**6 - 862*AC2*BC2*a**6*b**4*c**2 - 270*AC2*BC2*a**6*b**2*c**4 + 22*AC2*BC2*a**6*c**6 + 960*AC2*BC2*a**5*b**5*c**2 + 1408*AC2*BC2*a**5*b**3*c**4 + 448*AC2*BC2*a**5*b*c**6 - 862*AC2*BC2*a**4*b**6*c**2 - 1642*AC2*BC2*a**4*b**4*c**4 - 826*AC2*BC2*a**4*b**2*c**6 - 46*AC2*BC2*a**4*c**8 + 1408*AC2*BC2*a**3*b**5*c**4 + 2048*AC2*BC2*a**3*b**3*c**6 + 640*AC2*BC2*a**3*b*c**8 - 270*AC2*BC2*a**2*b**6*c**4 - 826*AC2*BC2*a**2*b**4*c**6 - 586*AC2*BC2*a**2*b**2*c**8 - 30*AC2*BC2*a**2*c**10 + 448*AC2*BC2*a*b**5*c**6 + 640*AC2*BC2*a*b**3*c**8 + 192*AC2*BC2*a*b*c**10 + 22*AC2*BC2*b**6*c**6 - 46*AC2*BC2*b**4*c**8 - 30*AC2*BC2*b**2*c**10 + 38*AC2*BC2*c**12 - 440*AC2*BC*a**6*b**7 - 1064*AC2*BC*a**6*b**5*c**2 - 808*AC2*BC*a**6*b**3*c**4 - 184*AC2*BC*a**6*b*c**6 + 592*AC2*BC*a**5*b**6*c**2 + 1328*AC2*BC*a**5*b**4*c**4 + 880*AC2*BC*a**5*b**2*c**6 + 144*AC2*BC*a**5*c**8 - 792*AC2*BC*a**4*b**7*c**2 - 2184*AC2*BC*a**4*b**5*c**4 - 1992*AC2*BC*a**4*b**3*c**6 - 600*AC2*BC*a**4*b*c**8 + 928*AC2*BC*a**3*b**6*c**4 + 2144*AC2*BC*a**3*b**4*c**6 + 1504*AC2*BC*a**3*b**2*c**8 + 288*AC2*BC*a**3*c**10 - 392*AC2*BC*a**2*b**7*c**4 - 1304*AC2*BC*a**2*b**5*c**6 - 1432*AC2*BC*a**2*b**3*c**8 - 520*AC2*BC*a**2*b*c**10 + 336*AC2*BC*a*b**6*c**6 + 816*AC2*BC*a*b**4*c**8 + 624*AC2*BC*a*b**2*c**10 + 144*AC2*BC*a*c**12 - 40*AC2*BC*b**7*c**6 - 184*AC2*BC*b**5*c**8 - 248*AC2*BC*b**3*c**10 - 104*AC2*BC*b*c**12 - 40*AC2*a**6*b**8 - 224*AC2*a**6*b**6*c**2 - 368*AC2*a**6*b**4*c**4 - 224*AC2*a**6*b**2*c**6 - 40*AC2*a**6*c**8 - 64*AC2*a**5*b**7*c**2 - 64*AC2*a**5*b**5*c**4 + 64*AC2*a**5*b**3*c**6 + 64*AC2*a**5*b*c**8 - 120*AC2*a**4*b**8*c**2 - 544*AC2*a**4*b**6*c**4 - 848*AC2*a**4*b**4*c**6 - 544*AC2*a**4*b**2*c**8 - 120*AC2*a**4*c**10 - 128*AC2*a**3*b**7*c**4 - 128*AC2*a**3*b**5*c**6 + 128*AC2*a**3*b**3*c**8 + 128*AC2*a**3*b*c**10 - 120*AC2*a**2*b**8*c**4 - 416*AC2*a**2*b**6*c**6 - 592*AC2*a**2*b**4*c**8 - 416*AC2*a**2*b**2*c**10 - 120*AC2*a**2*c**12 - 64*AC2*a*b**7*c**6 - 64*AC2*a*b**5*c**8 + 64*AC2*a*b**3*c**10 + 64*AC2*a*b*c**12 - 40*AC2*b**8*c**6 - 96*AC2*b**6*c**8 - 112*AC2*b**4*c**10 - 96*AC2*b**2*c**12 - 40*AC2*c**14 + 96*AC*BC2**2*a**7*b**4 + 128*AC*BC2**2*a**7*b**2*c**2 + 32*AC*BC2**2*a**7*c**4 - 64*AC*BC2**2*a**6*b**3*c**2 - 64*AC*BC2**2*a**6*b*c**4 + 288*AC*BC2**2*a**5*b**4*c**2 + 384*AC*BC2**2*a**5*b**2*c**4 + 96*AC*BC2**2*a**5*c**6 - 192*AC*BC2**2*a**4*b**3*c**4 - 192*AC*BC2**2*a**4*b*c**6 + 288*AC*BC2**2*a**3*b**4*c**4 + 384*AC*BC2**2*a**3*b**2*c**6 + 96*AC*BC2**2*a**3*c**8 - 192*AC*BC2**2*a**2*b**3*c**6 - 192*AC*BC2**2*a**2*b*c**8 + 96*AC*BC2**2*a*b**4*c**6 + 128*AC*BC2**2*a*b**2*c**8 + 32*AC*BC2**2*a*c**10 - 64*AC*BC2**2*b**3*c**8 - 64*AC*BC2**2*b*c**10 - 160*AC*BC2*BC*a**7*b**5 - 192*AC*BC2*BC*a**7*b**3*c**2 - 32*AC*BC2*BC*a**7*b*c**4 + 288*AC*BC2*BC*a**6*b**4*c**2 + 320*AC*BC2*BC*a**6*b**2*c**4 + 32*AC*BC2*BC*a**6*c**6 - 288*AC*BC2*BC*a**5*b**5*c**2 - 448*AC*BC2*BC*a**5*b**3*c**4 - 160*AC*BC2*BC*a**5*b*c**6 + 544*AC*BC2*BC*a**4*b**4*c**4 + 576*AC*BC2*BC*a**4*b**2*c**6 + 32*AC*BC2*BC*a**4*c**8 - 96*AC*BC2*BC*a**3*b**5*c**4 - 320*AC*BC2*BC*a**3*b**3*c**6 - 224*AC*BC2*BC*a**3*b*c**8 + 224*AC*BC2*BC*a**2*b**4*c**6 + 192*AC*BC2*BC*a**2*b**2*c**8 - 32*AC*BC2*BC*a**2*c**10 + 32*AC*BC2*BC*a*b**5*c**6 - 64*AC*BC2*BC*a*b**3*c**8 - 96*AC*BC2*BC*a*b*c**10 - 32*AC*BC2*BC*b**4*c**8 - 64*AC*BC2*BC*b**2*c**10 - 32*AC*BC2*BC*c**12 - 440*AC*BC2*a**7*b**6 - 792*AC*BC2*a**7*b**4*c**2 - 392*AC*BC2*a**7*b**2*c**4 - 40*AC*BC2*a**7*c**6 + 592*AC*BC2*a**6*b**5*c**2 + 928*AC*BC2*a**6*b**3*c**4 + 336*AC*BC2*a**6*b*c**6 - 1064*AC*BC2*a**5*b**6*c**2 - 2184*AC*BC2*a**5*b**4*c**4 - 1304*AC*BC2*a**5*b**2*c**6 - 184*AC*BC2*a**5*c**8 + 1328*AC*BC2*a**4*b**5*c**4 + 2144*AC*BC2*a**4*b**3*c**6 + 816*AC*BC2*a**4*b*c**8 - 808*AC*BC2*a**3*b**6*c**4 - 1992*AC*BC2*a**3*b**4*c**6 - 1432*AC*BC2*a**3*b**2*c**8 - 248*AC*BC2*a**3*c**10 + 880*AC*BC2*a**2*b**5*c**6 + 1504*AC*BC2*a**2*b**3*c**8 + 624*AC*BC2*a**2*b*c**10 - 184*AC*BC2*a*b**6*c**6 - 600*AC*BC2*a*b**4*c**8 - 520*AC*BC2*a*b**2*c**10 - 104*AC*BC2*a*c**12 + 144*AC*BC2*b**5*c**8 + 288*AC*BC2*b**3*c**10 + 144*AC*BC2*b*c**12 - 40*AC*BC*a**7*b**7 - 184*AC*BC*a**7*b**5*c**2 - 248*AC*BC*a**7*b**3*c**4 - 104*AC*BC*a**7*b*c**6 - 56*AC*BC*a**6*b**6*c**2 - 40*AC*BC*a**6*b**4*c**4 + 88*AC*BC*a**6*b**2*c**6 + 72*AC*BC*a**6*c**8 - 184*AC*BC*a**5*b**7*c**2 - 616*AC*BC*a**5*b**5*c**4 - 680*AC*BC*a**5*b**3*c**6 - 248*AC*BC*a**5*b*c**8 - 40*AC*BC*a**4*b**6*c**4 + 136*AC*BC*a**4*b**4*c**6 + 392*AC*BC*a**4*b**2*c**8 + 216*AC*BC*a**4*c**10 - 248*AC*BC*a**3*b**7*c**4 - 680*AC*BC*a**3*b**5*c**6 - 616*AC*BC*a**3*b**3*c**8 - 184*AC*BC*a**3*b*c**10 + 88*AC*BC*a**2*b**6*c**6 + 392*AC*BC*a**2*b**4*c**8 + 520*AC*BC*a**2*b**2*c**10 + 216*AC*BC*a**2*c**12 - 104*AC*BC*a*b**7*c**6 - 248*AC*BC*a*b**5*c**8 - 184*AC*BC*a*b**3*c**10 - 40*AC*BC*a*b*c**12 + 72*AC*BC*b**6*c**8 + 216*AC*BC*b**4*c**10 + 216*AC*BC*b**2*c**12 + 72*AC*BC*c**14 + 144*AC*a**7*b**8 + 272*AC*a**7*b**6*c**2 + 80*AC*a**7*b**4*c**4 - 80*AC*a**7*b**2*c**6 - 32*AC*a**7*c**8 - 304*AC*a**6*b**7*c**2 - 656*AC*a**6*b**5*c**4 - 400*AC*a**6*b**3*c**6 - 48*AC*a**6*b*c**8 + 304*AC*a**5*b**8*c**2 + 688*AC*a**5*b**6*c**4 + 368*AC*a**5*b**4*c**6 - 112*AC*a**5*b**2*c**8 - 96*AC*a**5*c**10 - 656*AC*a**4*b**7*c**4 - 1456*AC*a**4*b**5*c**6 - 944*AC*a**4*b**3*c**8 - 144*AC*a**4*b*c**10 + 176*AC*a**3*b**8*c**4 + 560*AC*a**3*b**6*c**6 + 496*AC*a**3*b**4*c**8 + 16*AC*a**3*b**2*c**10 - 96*AC*a**3*c**12 - 400*AC*a**2*b**7*c**6 - 944*AC*a**2*b**5*c**8 - 688*AC*a**2*b**3*c**10 - 144*AC*a**2*b*c**12 + 16*AC*a*b**8*c**6 + 144*AC*a*b**6*c**8 + 208*AC*a*b**4*c**10 + 48*AC*a*b**2*c**12 - 32*AC*a*c**14 - 48*AC*b**7*c**8 - 144*AC*b**5*c**10 - 144*AC*b**3*c**12 - 48*AC*b*c**14 + 16*BC2**2*a**8*b**4 + 32*BC2**2*a**8*b**2*c**2 + 16*BC2**2*a**8*c**4 + 64*BC2**2*a**6*b**4*c**2 + 128*BC2**2*a**6*b**2*c**4 + 64*BC2**2*a**6*c**6 + 96*BC2**2*a**4*b**4*c**4 + 192*BC2**2*a**4*b**2*c**6 + 96*BC2**2*a**4*c**8 + 64*BC2**2*a**2*b**4*c**6 + 128*BC2**2*a**2*b**2*c**8 + 64*BC2**2*a**2*c**10 + 16*BC2**2*b**4*c**8 + 32*BC2**2*b**2*c**10 + 16*BC2**2*c**12 - 64*BC2*BC*a**8*b**5 - 128*BC2*BC*a**8*b**3*c**2 - 64*BC2*BC*a**8*b*c**4 + 64*BC2*BC*a**7*b**4*c**2 + 128*BC2*BC*a**7*b**2*c**4 + 64*BC2*BC*a**7*c**6 - 192*BC2*BC*a**6*b**5*c**2 - 384*BC2*BC*a**6*b**3*c**4 - 192*BC2*BC*a**6*b*c**6 + 192*BC2*BC*a**5*b**4*c**4 + 384*BC2*BC*a**5*b**2*c**6 + 192*BC2*BC*a**5*c**8 - 192*BC2*BC*a**4*b**5*c**4 - 384*BC2*BC*a**4*b**3*c**6 - 192*BC2*BC*a**4*b*c**8 + 192*BC2*BC*a**3*b**4*c**6 + 384*BC2*BC*a**3*b**2*c**8 + 192*BC2*BC*a**3*c**10 - 64*BC2*BC*a**2*b**5*c**6 - 128*BC2*BC*a**2*b**3*c**8 - 64*BC2*BC*a**2*b*c**10 + 64*BC2*BC*a*b**4*c**8 + 128*BC2*BC*a*b**2*c**10 + 64*BC2*BC*a*c**12 - 40*BC2*a**8*b**6 - 120*BC2*a**8*b**4*c**2 - 120*BC2*a**8*b**2*c**4 - 40*BC2*a**8*c**6 - 64*BC2*a**7*b**5*c**2 - 128*BC2*a**7*b**3*c**4 - 64*BC2*a**7*b*c**6 - 224*BC2*a**6*b**6*c**2 - 544*BC2*a**6*b**4*c**4 - 416*BC2*a**6*b**2*c**6 - 96*BC2*a**6*c**8 - 64*BC2*a**5*b**5*c**4 - 128*BC2*a**5*b**3*c**6 - 64*BC2*a**5*b*c**8 - 368*BC2*a**4*b**6*c**4 - 848*BC2*a**4*b**4*c**6 - 592*BC2*a**4*b**2*c**8 - 112*BC2*a**4*c**10 + 64*BC2*a**3*b**5*c**6 + 128*BC2*a**3*b**3*c**8 + 64*BC2*a**3*b*c**10 - 224*BC2*a**2*b**6*c**6 - 544*BC2*a**2*b**4*c**8 - 416*BC2*a**2*b**2*c**10 - 96*BC2*a**2*c**12 + 64*BC2*a*b**5*c**8 + 128*BC2*a*b**3*c**10 + 64*BC2*a*b*c**12 - 40*BC2*b**6*c**8 - 120*BC2*b**4*c**10 - 120*BC2*b**2*c**12 - 40*BC2*c**14 + 144*BC*a**8*b**7 + 304*BC*a**8*b**5*c**2 + 176*BC*a**8*b**3*c**4 + 16*BC*a**8*b*c**6 - 304*BC*a**7*b**6*c**2 - 656*BC*a**7*b**4*c**4 - 400*BC*a**7*b**2*c**6 - 48*BC*a**7*c**8 + 272*BC*a**6*b**7*c**2 + 688*BC*a**6*b**5*c**4 + 560*BC*a**6*b**3*c**6 + 144*BC*a**6*b*c**8 - 656*BC*a**5*b**6*c**4 - 1456*BC*a**5*b**4*c**6 - 944*BC*a**5*b**2*c**8 - 144*BC*a**5*c**10 + 80*BC*a**4*b**7*c**4 + 368*BC*a**4*b**5*c**6 + 496*BC*a**4*b**3*c**8 + 208*BC*a**4*b*c**10 - 400*BC*a**3*b**6*c**6 - 944*BC*a**3*b**4*c**8 - 688*BC*a**3*b**2*c**10 - 144*BC*a**3*c**12 - 80*BC*a**2*b**7*c**6 - 112*BC*a**2*b**5*c**8 + 16*BC*a**2*b**3*c**10 + 48*BC*a**2*b*c**12 - 48*BC*a*b**6*c**8 - 144*BC*a*b**4*c**10 - 144*BC*a*b**2*c**12 - 48*BC*a*c**14 - 32*BC*b**7*c**8 - 96*BC*b**5*c**10 - 96*BC*b**3*c**12 - 32*BC*b*c**14 + 105*a**8*b**8 + 244*a**8*b**6*c**2 + 166*a**8*b**4*c**4 + 20*a**8*b**2*c**6 - 7*a**8*c**8 - 176*a**7*b**7*c**2 - 400*a**7*b**5*c**4 - 272*a**7*b**3*c**6 - 48*a**7*b*c**8 + 244*a**6*b**8*c**2 + 640*a**6*b**6*c**4 + 520*a**6*b**4*c**6 + 96*a**6*b**2*c**8 - 28*a**6*c**10 - 400*a**5*b**7*c**4 - 944*a**5*b**5*c**6 - 688*a**5*b**3*c**8 - 144*a**5*b*c**10 + 166*a**4*b**8*c**4 + 520*a**4*b**6*c**6 + 500*a**4*b**4*c**8 + 104*a**4*b**2*c**10 - 42*a**4*c**12 - 272*a**3*b**7*c**6 - 688*a**3*b**5*c**8 - 560*a**3*b**3*c**10 - 144*a**3*b*c**12 + 20*a**2*b**8*c**6 + 96*a**2*b**6*c**8 + 104*a**2*b**4*c**10 - 28*a**2*c**14 - 48*a*b**7*c**8 - 144*a*b**5*c**10 - 144*a*b**3*c**12 - 48*a*b*c**14 - 7*b**8*c**8 - 28*b**6*c**10 - 42*b**4*c**12 - 28*b**2*c**14 - 7*c**16))