from sympy import *

# ISBN 9787542848482, p68, ยง2.4, ex9
# sum_cyc(sqrt(1 + 48*x/(y + z))) >= 15

def cyc(f, vars):
    x, y, z = vars
    t = symbols('t', negative = False)
    return f.subs(z, t).subs(y, z).subs(x, y).subs(t, x)

def sum_cyc(f, vars):
    f1 = cyc(f, vars)
    return f + f1 + cyc(f1, vars)

def main():
    x, y, z = symbols('x, y, z', negative = False)
    f0 = sqrt(1 + 48*x/(y + z))
    m, n, p, q, r, s, t = symbols('m, n, p, q, r, s, t')
    n = 1
    g = 15*(n*x**2 + m*(y**2 + z**2) + p*(x*y + x*z) + q*y*z)
    h = (n + 2*m)*(x**2 + y**2 + z**2) + (2*p + q)*(x*y + x*z + y*z)
    print('sum_cyc(g/h) =', cancel(sum_cyc(g/h, (x, y, z))))
    f = f0**2 - (g/h)**2
    # f >= 0 if sum_cyc(f0) >= 15
    # f(1,1,1) = 0
    eq1 = Eq(f.subs(x, 1).subs(y, 1).subs(z, 1), 0)
    s32 = S(3)/2
    # f(3/2,3/2,0) = 0
    eq2 = Eq(f.subs(x, s32).subs(y, s32).subs(z, 0), 0)
    # f(3/2,0,3/2) = 0
    eq3 = Eq(f.subs(x, s32).subs(y, 0).subs(z, s32), 0)
    # f(0,3/2,3/2) = 0
    eq4 = Eq(f.subs(x, 0).subs(y, s32).subs(z, s32), 0)
    # f_a,b(1,1,1) = 0
    eq5 = Eq(diff(f.subs(z, 3 - x - y), x).subs(x, 1).subs(y, 1), 0)
    eq6 = Eq(diff(f.subs(z, 3 - x - y), y).subs(x, 1).subs(y, 1), 0)
    # f_a(3/2,3/2,0) = 0
    eq7 = Eq(diff(f.subs(z, 0).subs(y, 3 - x), x).subs(x, s32), 0)
    # f_a(3/2,0,3/2) = 0
    eq8 = Eq(diff(f.subs(y, 0).subs(z, 3 - x), x).subs(x, s32), 0)
    # f_b(0,3/2,3/2) = 0
    eq9 = Eq(diff(f.subs(x, 0).subs(z, 3 - y), y).subs(y, s32), 0)
    print('eq1:', factor(eq1)) # True
    print('eq2:', factor(eq2))
    print('eq3:', factor(eq3)) # = eq2
    print('eq4:', factor(eq4))
    print('eq5:', factor(eq5))
    print('eq6:', factor(eq6)) # True
    print('eq7:', factor(eq7))
    print('eq8:', factor(eq8)) # = eq7
    print('eq9:', factor(eq9)) # True
    mpq = solve([eq2, eq4, eq5, eq7], (m, p, q))
    print('mpq =', mpq)
    mpq = mpq[0]
    f = f.subs(m, mpq[0]).subs(p, mpq[1]).subs(q, mpq[2])
    u, v = symbols('u, v', negative = False)
    # doesn't hold
    print('f(xyz) =', factor(f.subs(y, x*(1 + u)).subs(z, x*(1 + u + v))))
    print('f(zyx) =', factor(f.subs(y, z*(1 + u)).subs(x, z*(1 + u + v))))
    print('f(1,1,100) =', f.subs(x, 1).subs(y, 1).subs(z, 100))
    print()

    # try cubic homogeneous polynomial
    g = 15*(n*x**3 + p*(x**2*y + x**2*z) + q*(x*y**2 + x*z**2) + r*(y**2*z + y*z**2) + s*(y**3 + z**3) + t*x*y*z)
    h = (n + 2*s)*(x**3 + y**3 + z**3) + (p + q + r)*(x**2*y + x**2*z + x*y**2 + x*z**2 + y**2*z + y*z**2) + 3*t*x*y*z
    # factor(sum_cyc(...)) is too slow
    print('sum_cyc(g/h) =', cancel(sum_cyc(g/h, (x, y, z))))
    f = f0**2 - (g/h)**2
    # f(1,1,1) = 0
    eq1 = Eq(f.subs(x, 1).subs(y, 1).subs(z, 1), 0)
    # f(3/2,3/2,0) = 0
    eq2 = Eq(f.subs(x, s32).subs(y, s32).subs(z, 0), 0)
    # f(3/2,0,3/2) = 0
    eq3 = Eq(f.subs(x, s32).subs(y, 0).subs(z, s32), 0)
    # f(0,3/2,3/2) = 0
    eq4 = Eq(f.subs(x, 0).subs(y, s32).subs(z, s32), 0)
    # f_a,b(1,1,1) = 0
    eq5 = Eq(diff(f.subs(z, 3 - x - y), x).subs(x, 1).subs(y, 1), 0)
    eq6 = Eq(diff(f.subs(z, 3 - x - y), y).subs(x, 1).subs(y, 1), 0)
    # f_a(3/2,3/2,0) = 0
    eq7 = Eq(diff(f.subs(z, 0).subs(y, 3 - x), x).subs(x, s32), 0)
    # f_a(3/2,0,3/2) = 0
    eq8 = Eq(diff(f.subs(y, 0).subs(z, 3 - x), x).subs(x, s32), 0)
    # f_b(0,3/2,3/2) = 0
    eq9 = Eq(diff(f.subs(x, 0).subs(z, 3 - y), y).subs(y, s32), 0)
    print('eq1:', factor(eq1)) # True
    print('eq2:', factor(eq2))
    print('eq3:', factor(eq3)) # = eq2
    print('eq4:', factor(eq4))
    print('eq5:', factor(eq5))
    print('eq6:', factor(eq6)) # True
    print('eq7:', factor(eq7))
    print('eq8:', factor(eq8)) # = eq7
    print('eq9:', factor(eq9)) # True
    pqr = solve([eq2, eq4, eq5, eq7], (p, q, r))
    print('pqr =', pqr)
    pqr = pqr[0]
    f = f.subs(p, pqr[0]).subs(q, pqr[1]).subs(r, pqr[2])
    a, b, c = symbols('a, b, c', negative = False)
    abc = (a + b + c)/3
    x0, y0, z0 = a/abc, b/abc, c/abc
    f = f.subs(x, x0).subs(y, y0).subs(z, z0)
    u, v = symbols('u, v', negative = False)
    print('f(abc) =', factor(f.subs(b, a*(1 + u)).subs(c, a*(1 + u + v))))
    print('f(cba) =', factor(f.subs(b, c*(1 + u)).subs(a, c*(1 + u + v))))
    # k1 >= 0
    k1 = 511784*s**2*u**6 + 296296*s**2*u**5*v**2 + 1535352*s**2*u**5*v + 2938544*s**2*u**5 + 740740*s**2*u**4*v**3 + 4363630*s**2*u**4*v**2 + 7346360*s**2*u**4*v + 5894136*s**2*u**4 + 24882*s**2*u**3*v**4 + 6168340*s**2*u**3*v**3 + 14756928*s**2*u**3*v**2 + 11788272*s**2*u**3*v + 4336280*s**2*u**3 - 703417*s**2*u**2*v**5 + 3301753*s**2*u**2*v**4 + 14789032*s**2*u**2*v**3 + 16451420*s**2*u**2*v**2 + 6504420*s**2*u**2*v + 938600*s**2*u**2 - 444301*s**2*u*v**6 + 473475*s**2*u*v**5 + 6155810*s**2*u*v**4 + 10557284*s**2*u*v**3 + 6167200*s**2*u*v**2 + 938600*s**2*u*v - 80223*s**2*v**7 - 50402*s**2*v**6 + 857945*s**2*v**5 + 2232254*s**2*v**4 + 1999530*s**2*v**3 + 595400*s**2*v**2 - 132720*s*t*u**6 - 48048*s*t*u**5*v**2 - 398160*s*t*u**5*v - 906456*s*t*u**5 - 120120*s*t*u**4*v**3 - 1091364*s*t*u**4*v**2 - 2266140*s*t*u**4*v - 1969656*s*t*u**4 - 108108*s*t*u**3*v**4 - 1519128*s*t*u**3*v**3 - 3995736*s*t*u**3*v**2 - 3939312*s*t*u**3*v - 1662120*s*t*u**3 - 42042*s*t*u**2*v**5 - 882498*s*t*u**2*v**4 - 3727464*s*t*u**2*v**3 - 4960020*s*t*u**2*v**2 - 2493180*s*t*u**2*v - 466200*s*t*u**2 - 6006*s*t*u*v**6 - 189294*s*t*u*v**5 - 1488864*s*t*u*v**4 - 2990364*s*t*u*v**3 - 2179800*s*t*u*v**2 - 466200*s*t*u*v - 6072*s*t*v**6 - 198726*s*t*v**5 - 608724*s*t*v**4 - 674370*s*t*v**3 - 258300*s*t*v**2 - 488656*s*u**6 - 174944*s*u**5*v**2 - 1465968*s*u**5*v - 2151616*s*u**5 - 437360*s*u**4*v**3 - 3495740*s*u**4*v**2 - 5379040*s*u**4*v - 3256464*s*u**4 - 382008*s*u**3*v**4 - 4548200*s*u**3*v**3 - 9408252*s*u**3*v**2 - 6512928*s*u**3*v - 2141800*s*u**3 - 135652*s*u**2*v**5 - 2957762*s*u**2*v**4 - 8733338*s*u**2*v**3 - 9069220*s*u**2*v**2 - 3212700*s*u**2*v - 478600*s*u**2 - 13156*s*u*v**6 - 927990*s*u*v**5 - 3699370*s*u*v**4 - 5812756*s*u*v**3 - 3478400*s*u*v**2 - 478600*s*u*v + 1452*s*v**7 - 112772*s*v**6 - 573430*s*v**5 - 1247056*s*v**4 - 1203750*s*v**3 - 415900*s*v**2 + 8064*t**2*u**6 + 24192*t**2*u**5*v + 53568*t**2*u**5 + 27216*t**2*u**4*v**2 + 133920*t**2*u**4*v + 140544*t**2*u**4 + 14112*t**2*u**3*v**3 + 141840*t**2*u**3*v**2 + 281088*t**2*u**3*v + 152640*t**2*u**3 + 3276*t**2*u**2*v**4 + 78840*t**2*u**2*v**3 + 268380*t**2*u**2*v**2 + 228960*t**2*u**2*v + 57600*t**2*u**2 + 252*t**2*u*v**5 + 18144*t**2*u*v**4 + 127836*t**2*u*v**3 + 174600*t**2*u*v**2 + 57600*t**2*u*v + 396*t**2*v**5 + 21636*t**2*v**4 + 49140*t**2*v**3 + 27900*t**2*v**2 + 62160*t*u**6 + 3696*t*u**5*v**2 + 186480*t*u**5*v + 317352*t*u**5 + 9240*t*u**4*v**3 + 298428*t*u**4*v**2 + 793380*t*u**4*v + 524472*t*u**4 + 8316*t*u**3*v**4 + 286056*t*u**3*v**3 + 1127472*t*u**3*v**2 + 1048944*t*u**3*v + 389880*t*u**3 + 3234*t*u**2*v**5 + 139746*t*u**2*v**4 + 897828*t*u**2*v**3 + 1288560*t*u**2*v**2 + 584820*t*u**2*v + 120600*t*u**2 + 462*t*u*v**6 + 27798*t*u*v**5 + 339708*t*u*v**4 + 764088*t*u*v**3 + 597600*t*u*v**2 + 120600*t*u*v + 924*t*v**6 + 46662*t*v**5 + 156168*t*v**4 + 201330*t*v**3 + 90900*t*v**2 + 115976*u**6 + 11704*u**5*v**2 + 347928*u**5*v + 341456*u**5 + 29260*u**4*v**3 + 638710*u**4*v**2 + 853640*u**4*v + 432984*u**4 + 29238*u**3*v**4 + 697540*u**3*v**3 + 1352292*u**3*v**2 + 865968*u**3*v + 248480*u**3 + 14597*u**2*v**5 + 443437*u**2*v**4 + 1174798*u**2*v**3 + 1216760*u**2*v**2 + 372720*u**2*v + 58400*u**2 + 3641*u*v**6 + 152655*u*v**5 + 514100*u*v**4 + 783776*u*v**3 + 486400*u*v**2 + 58400*u*v + 363*v**7 + 21802*v**6 + 89705*v**5 + 177746*v**4 + 181080*v**3 + 71600*v**2
    # k2 <= 0
    k2 = 90650*s**2*u**6 + 244718*s**2*u**5*v**2 + 550819*s**2*u**5*v + 204363*s**2*u**5 + 1321233*s**2*u**4*v**3 + 1884645*s**2*u**4*v**2 + 1536756*s**2*u**4*v - 188134*s**2*u**4 + 1978492*s**2*u**3*v**4 + 5743072*s**2*u**3*v**3 + 3387020*s**2*u**3*v**2 + 815636*s**2*u**3*v - 977470*s**2*u**3 + 815022*s**2*u**2*v**5 + 6926846*s**2*u**2*v**4 + 8841772*s**2*u**2*v**3 + 123060*s**2*u**2*v**2 - 1502800*s**2*u**2*v - 595400*s**2*u**2 - 76428*s**2*u*v**6 + 2892864*s**2*u*v**5 + 7817016*s**2*u*v**4 + 3416528*s**2*u*v**3 - 2881580*s**2*u*v**2 - 938600*s**2*u*v - 69696*s**2*v**7 + 335016*s**2*v**6 + 1887816*s**2*v**5 + 2064984*s**2*v**4 - 356720*s**2*v**3 - 938600*s**2*v**2 + 28812*s*t*u**6 + 4716*s*t*u**5*v**2 + 122910*s*t*u**5*v + 164226*s*t*u**5 - 81942*s*t*u**4*v**3 + 279498*s*t*u**4*v**2 + 548160*s*t*u**4*v + 494244*s*t*u**4 - 222318*s*t*u**3*v**4 - 323844*s*t*u**3*v**3 + 1357788*s*t*u**3*v**2 + 1401684*s*t*u**3*v + 617130*s*t*u**3 - 180012*s*t*u**2*v**5 - 988788*s*t*u**2*v**4 + 287580*s*t*u**2*v**3 + 2837100*s*t*u**2*v**2 + 1442700*s*t*u**2*v + 258300*s*t*u**2 - 44352*s*t*u*v**6 - 574320*s*t*u*v**5 - 795756*s*t*u*v**4 + 1304112*s*t*u*v**3 + 2168820*s*t*u*v**2 + 466200*s*t*u*v - 88704*s*t*v**6 - 308208*s*t*v**5 - 16824*s*t*v**4 + 668880*s*t*v**3 + 466200*s*t*v**2 - 28420*s*u**6 - 24952*s*u**5*v**2 - 344606*s*u**5*v + 104238*s*u**5 - 384432*s*u**4*v**3 - 676890*s*u**4*v**2 - 572334*s*u**4*v + 591056*s*u**4 - 815888*s*u**3*v**4 - 1770008*s*u**3*v**3 - 705910*s*u**3*v**2 + 188156*s*u**3*v + 875750*s*u**3 - 738888*s*u**2*v**5 - 2182324*s*u**2*v**4 - 2060408*s*u**2*v**3 + 821820*s*u**2*v**2 + 994100*s*u**2*v + 415900*s*u**2 - 353628*s*u*v**6 - 1105176*s*u*v**5 - 1904664*s*u*v**4 - 547072*s*u*v**3 + 1573300*s*u*v**2 + 478600*s*u*v - 69696*s*v**7 - 219384*s*v**6 - 447024*s*v**5 - 524736*s*v**4 + 251200*s*v**3 + 478600*s*v**2 - 7056*t**2*u**6 - 7200*t**2*u**5*v**2 - 34416*t**2*u**5*v - 48672*t**2*u**5 - 21456*t**2*u**4*v**3 - 122652*t**2*u**4*v**2 - 205992*t**2*u**4*v - 104076*t**2*u**4 - 21312*t**2*u**3*v**4 - 197964*t**2*u**3*v**3 - 487008*t**2*u**3*v**2 - 366876*t**2*u**3*v - 90360*t**2*u**3 - 7056*t**2*u**2*v**5 - 130896*t**2*u**2*v**4 - 530604*t**2*u**2*v**3 - 661140*t**2*u**2*v**2 - 252900*t**2*u**2*v - 27900*t**2*u**2 - 28224*t**2*u*v**5 - 229536*t**2*u*v**4 - 482688*t**2*u*v**3 - 347040*t**2*u*v**2 - 57600*t**2*u*v - 28224*t**2*v**5 - 105984*t**2*v**4 - 135360*t**2*v**3 - 57600*t**2*v**2 - 25284*t*u**6 - 39132*t*u**5*v**2 - 98970*t*u**5*v - 122862*t*u**5 - 115626*t*u**4*v**3 - 398946*t*u**4*v**2 - 352500*t*u**4*v - 259848*t*u**4 - 136494*t*u**3*v**4 - 700032*t*u**3*v**3 - 923016*t*u**3*v**2 - 592368*t*u**3*v - 253170*t*u**3 - 82176*t*u**2*v**5 - 587184*t*u**2*v**4 - 1087320*t*u**2*v**3 - 1085880*t*u**2*v**2 - 459900*t*u**2*v - 90900*t*u**2 - 22176*t*u*v**6 - 255840*t*u*v**5 - 563388*t*u*v**4 - 768144*t*u*v**3 - 621180*t*u*v**2 - 120600*t*u*v - 44352*t*v**6 - 122784*t*v**5 - 170952*t*v**4 - 213120*t*v**3 - 120600*t*v**2 - 9310*u**6 - 51718*u**5*v**2 + 31711*u**5*v - 73053*u**5 - 150993*u**4*v**3 - 59175*u**4*v**2 - 11106*u**4*v - 169426*u**4 - 207992*u**3*v**4 - 217472*u**3*v**3 - 151210*u**3*v**2 - 129856*u**3*v - 176920*u**3 - 166962*u**2*v**5 - 249886*u**2*v**4 - 233972*u**2*v**3 - 248280*u**2*v**2 - 163600*u**2*v - 71600*u**2 - 76032*u*v**6 - 140904*u*v**5 - 161136*u*v**4 - 133168*u*v**3 - 211280*u*v**2 - 58400*u*v - 17424*v**7 - 30096*v**6 - 50616*v**5 - 23064*v**4 - 43520*v**3 - 58400*v**2
    p1 = Poly(k1, (u, v))
    p2 = Poly(k2, (u, v))
    print('p1(u,v) =', p1)
    print('p2(u,v) =', p2)
    # search possible s and t
    print()
    print('```python')
    print('    non_negative_coeffs = [')
    for coeff in p1.coeffs():
        print('        ' + str(coeff) + ',')
    print('    ]')
    print('    non_positive_coeffs = [')
    for coeff in p2.coeffs():
        print('        ' + str(coeff) + ',')
    print('    ]')
    print('```')
    print()

    # result from chen09-p70a.py, could be s = 0 and t0 >= 1/3
    s0, t0 = 0, S(1)/3
    g = g.subs(p, pqr[0]).subs(q, pqr[1]).subs(r, pqr[2]).subs(s, s0).subs(t, t0)
    h = h.subs(p, pqr[0]).subs(q, pqr[1]).subs(r, pqr[2]).subs(s, s0).subs(t, t0)
    print('g =', factor(g))
    print('h =', factor(h))
    f = f0**2 - (g/h)**2
    f = f.subs(x, x0).subs(y, y0).subs(z, z0)
    print('f(abc) =', factor(f.subs(b, a*(1 + u)).subs(c, a*(1 + u + v))))
    print('f(cba) =', factor(f.subs(b, c*(1 + u)).subs(a, c*(1 + u + v))))

if __name__ == '__main__':
    main()