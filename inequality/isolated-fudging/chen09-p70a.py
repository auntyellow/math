from scipy.optimize import minimize
from sympy import nsimplify

# ISBN 9787542848482, p68, ยง2.4, ex9
# sum_cyc(sqrt(1 + 48*x/(y + z))) >= 15

def fun(X):
    s, t = X[0], X[1]
    # make g/h positive to avoid checking f0 + g/h >= 0 (A**2 <= B**2 && A + B >= 0 -> A <= B)
    vars = [-2599*s/990 + 97*t/165 - 137/990, -2017*s/990 + t/165 + 1009/990, -1249*s/990 + 7*t/165 + 133/990, s, t]
    bounds = 0
    for v in vars:
        if v < 0:
            bounds += (1 + v**2)*1e10
    if bounds > 0:
        return bounds
    non_negative_coeffs = [
        511784*s**2 - 132720*s*t - 488656*s + 8064*t**2 + 62160*t + 115976,
        296296*s**2 - 48048*s*t - 174944*s + 3696*t + 11704,
        1535352*s**2 - 398160*s*t - 1465968*s + 24192*t**2 + 186480*t + 347928,
        2938544*s**2 - 906456*s*t - 2151616*s + 53568*t**2 + 317352*t + 341456,
        740740*s**2 - 120120*s*t - 437360*s + 9240*t + 29260,
        4363630*s**2 - 1091364*s*t - 3495740*s + 27216*t**2 + 298428*t + 638710,
        7346360*s**2 - 2266140*s*t - 5379040*s + 133920*t**2 + 793380*t + 853640,
        5894136*s**2 - 1969656*s*t - 3256464*s + 140544*t**2 + 524472*t + 432984,
        24882*s**2 - 108108*s*t - 382008*s + 8316*t + 29238,
        6168340*s**2 - 1519128*s*t - 4548200*s + 14112*t**2 + 286056*t + 697540,
        14756928*s**2 - 3995736*s*t - 9408252*s + 141840*t**2 + 1127472*t + 1352292,
        11788272*s**2 - 3939312*s*t - 6512928*s + 281088*t**2 + 1048944*t + 865968,
        4336280*s**2 - 1662120*s*t - 2141800*s + 152640*t**2 + 389880*t + 248480,
        -703417*s**2 - 42042*s*t - 135652*s + 3234*t + 14597,
        3301753*s**2 - 882498*s*t - 2957762*s + 3276*t**2 + 139746*t + 443437,
        14789032*s**2 - 3727464*s*t - 8733338*s + 78840*t**2 + 897828*t + 1174798,
        16451420*s**2 - 4960020*s*t - 9069220*s + 268380*t**2 + 1288560*t + 1216760,
        6504420*s**2 - 2493180*s*t - 3212700*s + 228960*t**2 + 584820*t + 372720,
        938600*s**2 - 466200*s*t - 478600*s + 57600*t**2 + 120600*t + 58400,
        -444301*s**2 - 6006*s*t - 13156*s + 462*t + 3641,
        473475*s**2 - 189294*s*t - 927990*s + 252*t**2 + 27798*t + 152655,
        6155810*s**2 - 1488864*s*t - 3699370*s + 18144*t**2 + 339708*t + 514100,
        10557284*s**2 - 2990364*s*t - 5812756*s + 127836*t**2 + 764088*t + 783776,
        6167200*s**2 - 2179800*s*t - 3478400*s + 174600*t**2 + 597600*t + 486400,
        938600*s**2 - 466200*s*t - 478600*s + 57600*t**2 + 120600*t + 58400,
        -80223*s**2 + 1452*s + 363,
        -50402*s**2 - 6072*s*t - 112772*s + 924*t + 21802,
        857945*s**2 - 198726*s*t - 573430*s + 396*t**2 + 46662*t + 89705,
        2232254*s**2 - 608724*s*t - 1247056*s + 21636*t**2 + 156168*t + 177746,
        1999530*s**2 - 674370*s*t - 1203750*s + 49140*t**2 + 201330*t + 181080,
        595400*s**2 - 258300*s*t - 415900*s + 27900*t**2 + 90900*t + 71600,
    ]
    non_positive_coeffs = [
        90650*s**2 + 28812*s*t - 28420*s - 7056*t**2 - 25284*t - 9310,
        244718*s**2 + 4716*s*t - 24952*s - 7200*t**2 - 39132*t - 51718,
        550819*s**2 + 122910*s*t - 344606*s - 34416*t**2 - 98970*t + 31711,
        204363*s**2 + 164226*s*t + 104238*s - 48672*t**2 - 122862*t - 73053,
        1321233*s**2 - 81942*s*t - 384432*s - 21456*t**2 - 115626*t - 150993,
        1884645*s**2 + 279498*s*t - 676890*s - 122652*t**2 - 398946*t - 59175,
        1536756*s**2 + 548160*s*t - 572334*s - 205992*t**2 - 352500*t - 11106,
        -188134*s**2 + 494244*s*t + 591056*s - 104076*t**2 - 259848*t - 169426,
        1978492*s**2 - 222318*s*t - 815888*s - 21312*t**2 - 136494*t - 207992,
        5743072*s**2 - 323844*s*t - 1770008*s - 197964*t**2 - 700032*t - 217472,
        3387020*s**2 + 1357788*s*t - 705910*s - 487008*t**2 - 923016*t - 151210,
        815636*s**2 + 1401684*s*t + 188156*s - 366876*t**2 - 592368*t - 129856,
        -977470*s**2 + 617130*s*t + 875750*s - 90360*t**2 - 253170*t - 176920,
        815022*s**2 - 180012*s*t - 738888*s - 7056*t**2 - 82176*t - 166962,
        6926846*s**2 - 988788*s*t - 2182324*s - 130896*t**2 - 587184*t - 249886,
        8841772*s**2 + 287580*s*t - 2060408*s - 530604*t**2 - 1087320*t - 233972,
        123060*s**2 + 2837100*s*t + 821820*s - 661140*t**2 - 1085880*t - 248280,
        -1502800*s**2 + 1442700*s*t + 994100*s - 252900*t**2 - 459900*t - 163600,
        -595400*s**2 + 258300*s*t + 415900*s - 27900*t**2 - 90900*t - 71600,
        -76428*s**2 - 44352*s*t - 353628*s - 22176*t - 76032,
        2892864*s**2 - 574320*s*t - 1105176*s - 28224*t**2 - 255840*t - 140904,
        7817016*s**2 - 795756*s*t - 1904664*s - 229536*t**2 - 563388*t - 161136,
        3416528*s**2 + 1304112*s*t - 547072*s - 482688*t**2 - 768144*t - 133168,
        -2881580*s**2 + 2168820*s*t + 1573300*s - 347040*t**2 - 621180*t - 211280,
        -938600*s**2 + 466200*s*t + 478600*s - 57600*t**2 - 120600*t - 58400,
        -69696*s**2 - 69696*s - 17424,
        335016*s**2 - 88704*s*t - 219384*s - 44352*t - 30096,
        1887816*s**2 - 308208*s*t - 447024*s - 28224*t**2 - 122784*t - 50616,
        2064984*s**2 - 16824*s*t - 524736*s - 105984*t**2 - 170952*t - 23064,
        -356720*s**2 + 668880*s*t + 251200*s - 135360*t**2 - 213120*t - 43520,
        -938600*s**2 + 466200*s*t + 478600*s - 57600*t**2 - 120600*t - 58400,
    ]
    v = 0
    for coeff in non_positive_coeffs:
        v += coeff**2 if coeff > 0 else 0
    for coeff in non_negative_coeffs:
        v += coeff**2 if coeff < 0 else 0
    return v

def main():
    res = minimize(fun, [0, 0], method = 'Nelder-Mead')
    print(res)
    s0 = nsimplify(res.x[0], tolerance = 0.1, rational = True)
    t0 = nsimplify(res.x[1], tolerance = 0.1, rational = True)
    print('f({},{}) ='.format(s0, t0), fun([s0, t0]))

if __name__ == '__main__':
    main()