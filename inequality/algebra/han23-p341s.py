from sympy import *

# ISBN 9787312056185, p341, ex 11.7

def main():
    a, b, c, u, v, w = symbols('a, b, c, u, v, w', negative = False)
    f = 1/(a + u*b)/(a + v*b) + 1/(b + u*c)/(b + v*c) + 1/(c + u*a)/(c + v*a) - 9/(1 + u)/(1 + v)/(a*b + b*c + c*a)
    print('f(acb,1uv) =', factor(f.subs(c, a*(1 + c)).subs(b, a*(1 + b + c)).subs(u, 1 + u).subs(v, 1 + u + v))) # trivially positive
    print('f(abc,u1v) =', factor(f.subs(b, a*(1 + b)).subs(c, a*(1 + b + c)).subs(u, 1/(1 + u)).subs(v, 1 + v)))
    print('f(acb,v1u) =', factor(f.subs(c, a*(1 + c)).subs(b, a*(1 + b + c)).subs(v, 1/(1 + v)).subs(u, 1 + u)).subs(b, w).subs(c, b).subs(w, c)) # similar to f(abc,u1v)
    print('f(abc,1uv) =', factor(f.subs(b, a*(1 + b)).subs(c, a*(1 + b + c)).subs(u, 1 + u).subs(v, 1 + u + v)))
    print('f(acb,uv1) =', factor(f.subs(c, a*(1 + c)).subs(b, a*(1 + b + c)).subs(u, 1/(1 + u)).subs(v, 1/(1 + u + v))).subs(b, w).subs(c, b).subs(w, c)) # similar to f(abc,1uv)
    # so only need to prove when a <= b <= c
    print('f(abc) =', factor(f.subs(b, a*(1 + b)).subs(c, a*(1 + b + c))))
    g = b**6*u**3*v**3 + 2*b**6*u**3*v**2 + b**6*u**3*v + 2*b**6*u**2*v**3 - 3*b**6*u**2*v**2 - 4*b**6*u**2*v + b**6*u**2 + b**6*u*v**3 - 4*b**6*u*v**2 - 3*b**6*u*v + 2*b**6*u + b**6*v**2 + 2*b**6*v + b**6 + 3*b**5*c*u**3*v**3 + 5*b**5*c*u**3*v**2 + 2*b**5*c*u**3*v + 5*b**5*c*u**2*v**3 - 20*b**5*c*u**2*v**2 - 12*b**5*c*u**2*v + 4*b**5*c*u**2 + 2*b**5*c*u*v**3 - 12*b**5*c*u*v**2 + 2*b**5*c*u*v + 7*b**5*c*u + 4*b**5*c*v**2 + 7*b**5*c*v + 3*b**5*c + 8*b**5*u**3*v**3 + 10*b**5*u**3*v**2 + 4*b**5*u**3*v + 2*b**5*u**3 + 10*b**5*u**2*v**3 - 14*b**5*u**2*v**2 - 20*b**5*u**2*v + 4*b**5*u**2 + 4*b**5*u*v**3 - 20*b**5*u*v**2 - 14*b**5*u*v + 10*b**5*u + 2*b**5*v**3 + 4*b**5*v**2 + 10*b**5*v + 8*b**5 + 3*b**4*c**2*u**3*v**3 + 4*b**4*c**2*u**3*v**2 + b**4*c**2*u**3*v + 4*b**4*c**2*u**2*v**3 - 36*b**4*c**2*u**2*v**2 - 7*b**4*c**2*u**2*v + 6*b**4*c**2*u**2 + b**4*c**2*u*v**3 - 7*b**4*c**2*u*v**2 + 19*b**4*c**2*u*v + 9*b**4*c**2*u + 6*b**4*c**2*v**2 + 9*b**4*c**2*v + 3*b**4*c**2 + 20*b**4*c*u**3*v**3 + 15*b**4*c*u**3*v**2 + 9*b**4*c*u**3*v + 5*b**4*c*u**3 + 15*b**4*c*u**2*v**3 - 82*b**4*c*u**2*v**2 - 50*b**4*c*u**2*v + 11*b**4*c*u**2 + 9*b**4*c*u*v**3 - 50*b**4*c*u*v**2 + 12*b**4*c*u*v + 35*b**4*c*u + 5*b**4*c*v**3 + 11*b**4*c*v**2 + 35*b**4*c*v + 20*b**4*c + 18*b**4*u**3*v**3 + 20*b**4*u**3*v**2 + 8*b**4*u**3*v + 6*b**4*u**3 + 20*b**4*u**2*v**3 - 24*b**4*u**2*v**2 - 36*b**4*u**2*v + 8*b**4*u**2 + 8*b**4*u*v**3 - 36*b**4*u*v**2 - 24*b**4*u*v + 20*b**4*u + 6*b**4*v**3 + 8*b**4*v**2 + 20*b**4*v + 18*b**4 + b**3*c**3*u**3*v**3 + b**3*c**3*u**3*v**2 + b**3*c**3*u**2*v**3 - 24*b**3*c**3*u**2*v**2 + 6*b**3*c**3*u**2*v + 4*b**3*c**3*u**2 + 6*b**3*c**3*u*v**2 + 20*b**3*c**3*u*v + 5*b**3*c**3*u + 4*b**3*c**3*v**2 + 5*b**3*c**3*v + b**3*c**3 + 16*b**3*c**2*u**3*v**3 + 4*b**3*c**2*u**3*v**2 + 10*b**3*c**2*u**3*v + 4*b**3*c**2*u**3 + 4*b**3*c**2*u**2*v**3 - 108*b**3*c**2*u**2*v**2 - 26*b**3*c**2*u**2*v + 14*b**3*c**2*u**2 + 10*b**3*c**2*u*v**3 - 26*b**3*c**2*u*v**2 + 80*b**3*c**2*u*v + 44*b**3*c**2*u + 4*b**3*c**2*v**3 + 14*b**3*c**2*v**2 + 44*b**3*c**2*v + 16*b**3*c**2 + 36*b**3*c*u**3*v**3 + 22*b**3*c*u**3*v**2 + 16*b**3*c*u**3*v + 12*b**3*c*u**3 + 22*b**3*c*u**2*v**3 - 120*b**3*c*u**2*v**2 - 72*b**3*c*u**2*v + 16*b**3*c*u**2 + 16*b**3*c*u*v**3 - 72*b**3*c*u*v**2 + 24*b**3*c*u*v + 58*b**3*c*u + 12*b**3*c*v**3 + 16*b**3*c*v**2 + 58*b**3*c*v + 36*b**3*c + 16*b**3*u**3*v**3 + 18*b**3*u**3*v**2 + 8*b**3*u**3*v + 6*b**3*u**3 + 18*b**3*u**2*v**3 - 16*b**3*u**2*v**2 - 26*b**3*u**2*v + 8*b**3*u**2 + 8*b**3*u*v**3 - 26*b**3*u*v**2 - 16*b**3*u*v + 18*b**3*u + 6*b**3*v**3 + 8*b**3*v**2 + 18*b**3*v + 16*b**3 - 4*b**2*c**4*u**2*v**2 + 6*b**2*c**4*u**2*v + b**2*c**4*u**2 + 6*b**2*c**4*u*v**2 + 7*b**2*c**4*u*v + b**2*c**4*u + b**2*c**4*v**2 + b**2*c**4*v + 4*b**2*c**3*u**3*v**3 + 6*b**2*c**3*u**3*v + b**2*c**3*u**3 - 44*b**2*c**3*u**2*v**2 + 11*b**2*c**3*u**2*v + 10*b**2*c**3*u**2 + 6*b**2*c**3*u*v**3 + 11*b**2*c**3*u*v**2 + 72*b**2*c**3*u*v + 22*b**2*c**3*u + b**2*c**3*v**3 + 10*b**2*c**3*v**2 + 22*b**2*c**3*v + 4*b**2*c**3 + 24*b**2*c**2*u**3*v**3 + 6*b**2*c**2*u**3*v**2 + 18*b**2*c**2*u**3*v + 9*b**2*c**2*u**3 + 6*b**2*c**2*u**2*v**3 - 114*b**2*c**2*u**2*v**2 - 21*b**2*c**2*u**2*v + 18*b**2*c**2*u**2 + 18*b**2*c**2*u*v**3 - 21*b**2*c**2*u*v**2 + 102*b**2*c**2*u*v + 60*b**2*c**2*u + 9*b**2*c**2*v**3 + 18*b**2*c**2*v**2 + 60*b**2*c**2*v + 24*b**2*c**2 + 24*b**2*c*u**3*v**3 + 18*b**2*c*u**3*v**2 + 12*b**2*c*u**3*v + 9*b**2*c*u**3 + 18*b**2*c*u**2*v**3 - 60*b**2*c*u**2*v**2 - 39*b**2*c*u**2*v + 12*b**2*c*u**2 + 12*b**2*c*u*v**3 - 39*b**2*c*u*v**2 + 12*b**2*c*u*v + 36*b**2*c*u + 9*b**2*c*v**3 + 12*b**2*c*v**2 + 36*b**2*c*v + 24*b**2*c + 5*b**2*u**3*v**3 + 6*b**2*u**3*v**2 + 3*b**2*u**3*v + 2*b**2*u**3 + 6*b**2*u**2*v**3 - 3*b**2*u**2*v**2 - 6*b**2*u**2*v + 3*b**2*u**2 + 3*b**2*u*v**3 - 6*b**2*u*v**2 - 3*b**2*u*v + 6*b**2*u + 2*b**2*v**3 + 3*b**2*v**2 + 6*b**2*v + 5*b**2 + b*c**5*u**2*v**2 + b*c**5*u**2*v + b*c**5*u*v**2 + b*c**5*u*v + b*c**4*u**3*v**2 + b*c**4*u**3*v + b*c**4*u**2*v**3 + 11*b*c**4*u**2*v + 3*b*c**4*u**2 + b*c**4*u*v**3 + 11*b*c**4*u*v**2 + 22*b*c**4*u*v + 3*b*c**4*u + 3*b*c**4*v**2 + 3*b*c**4*v + 6*b*c**3*u**3*v**3 + 4*b*c**3*u**3*v**2 + 10*b*c**3*u**3*v + 3*b*c**3*u**3 + 4*b*c**3*u**2*v**3 - 18*b*c**3*u**2*v**2 + 15*b*c**3*u**2*v + 10*b*c**3*u**2 + 10*b*c**3*u*v**3 + 15*b*c**3*u*v**2 + 54*b*c**3*u*v + 22*b*c**3*u + 3*b*c**3*v**3 + 10*b*c**3*v**2 + 22*b*c**3*v + 6*b*c**3 + 16*b*c**2*u**3*v**3 + 12*b*c**2*u**3*v**2 + 12*b*c**2*u**3*v + 7*b*c**2*u**3 + 12*b*c**2*u**2*v**3 - 36*b*c**2*u**2*v**2 - 9*b*c**2*u**2*v + 12*b*c**2*u**2 + 12*b*c**2*u*v**3 - 9*b*c**2*u*v**2 + 36*b*c**2*u*v + 30*b*c**2*u + 7*b*c**2*v**3 + 12*b*c**2*v**2 + 30*b*c**2*v + 16*b*c**2 + 5*b*c*u**3*v**3 + 6*b*c*u**3*v**2 + 3*b*c*u**3*v + 2*b*c*u**3 + 6*b*c*u**2*v**3 - 3*b*c*u**2*v**2 - 6*b*c*u**2*v + 3*b*c*u**2 + 3*b*c*u*v**3 - 6*b*c*u*v**2 - 3*b*c*u*v + 6*b*c*u + 2*b*c*v**3 + 3*b*c*v**2 + 6*b*c*v + 5*b*c + 2*c**5*u**2*v**2 + 2*c**5*u**2*v + 2*c**5*u*v**2 + 2*c**5*u*v + 2*c**4*u**3*v**2 + 2*c**4*u**3*v + 2*c**4*u**2*v**3 + 6*c**4*u**2*v**2 + 6*c**4*u**2*v + 2*c**4*u**2 + 2*c**4*u*v**3 + 6*c**4*u*v**2 + 6*c**4*u*v + 2*c**4*u + 2*c**4*v**2 + 2*c**4*v + 4*c**3*u**3*v**3 + 6*c**3*u**3*v**2 + 4*c**3*u**3*v + 2*c**3*u**3 + 6*c**3*u**2*v**3 + 4*c**3*u**2*v**2 + 2*c**3*u**2*v + 4*c**3*u**2 + 4*c**3*u*v**3 + 2*c**3*u*v**2 + 4*c**3*u*v + 6*c**3*u + 2*c**3*v**3 + 4*c**3*v**2 + 6*c**3*v + 4*c**3 + 5*c**2*u**3*v**3 + 6*c**2*u**3*v**2 + 3*c**2*u**3*v + 2*c**2*u**3 + 6*c**2*u**2*v**3 - 3*c**2*u**2*v**2 - 6*c**2*u**2*v + 3*c**2*u**2 + 3*c**2*u*v**3 - 6*c**2*u*v**2 - 3*c**2*u*v + 6*c**2*u + 2*c**2*v**3 + 3*c**2*v**2 + 6*c**2*v + 5*c**2
    g_b, g_c, g_u, g_v = diff(g, b), diff(g, c), diff(g, u), diff(g, v)
    print('g_b =', g_b)
    print('g_c =', g_c)
    print('g_u =', g_u)
    print('g_v =', g_v)
    # too slow
    # B = groebner([g_b, g_c], b, c)
    # B = groebner([g_b, g_c, g_u, g_v], b, c, u, v)

if __name__ == '__main__':
    main()