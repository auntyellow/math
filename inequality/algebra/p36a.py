from numpy import sqrt
import numpy as np
import matplotlib.pyplot as plt

def z(u, v):
    # g
    z0 = u**4*v**2 + 2*u**4*v + u**2*v**4 + 2*u**2*v**3*sqrt(u**2 + 2*u) + 4*u**2*v**3 + 6*u**2*v**2*sqrt(u**2 + 2*u) + u**2*v**2 + 4*u**2*v*sqrt(u**2 + 2*u) - 6*u**2*v - u**2 + 2*u*v**4 + 8*u*v**3 + 12*u*v**2 + 2*u*v*sqrt(u**2 + 2*u) + 8*u*v + 2*u*sqrt(u**2 + 2*u) + v**4 - 2*v**3*sqrt(u**2 + 2*u) + 4*v**3 - 6*v**2*sqrt(u**2 + 2*u) + 6*v**2 - 6*v*sqrt(u**2 + 2*u) + 4*v - 2*sqrt(u**2 + 2*u) + 1
    # h
    z0 = u**3 - u**2*v*sqrt(u**2 + 2*u) - u**2*sqrt(u**2 + 2*u) + u**2 - u*v*sqrt(u**2 + 2*u) + u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - u*sqrt(u**2 + 2*u) + u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u + v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u)
    # g
    z0 = u**6*v**4 + 4*u**6*v**3 + 2*u**6*v**2 - 4*u**6*v + u**6 + 6*u**5*v**4 + 24*u**5*v**3 + 32*u**5*v**2 + 16*u**5*v + 10*u**5 + 11*u**4*v**4 - 12*u**4*v**3*sqrt(u**2 + 2*u) + 44*u**4*v**3 - 36*u**4*v**2*sqrt(u**2 + 2*u) + 98*u**4*v**2 - 28*u**4*v*sqrt(u**2 + 2*u) + 108*u**4*v - 4*u**4*sqrt(u**2 + 2*u) + 31*u**4 + 4*u**3*v**4 - 28*u**3*v**3*sqrt(u**2 + 2*u) + 16*u**3*v**3 - 84*u**3*v**2*sqrt(u**2 + 2*u) + 68*u**3*v**2 - 76*u**3*v*sqrt(u**2 + 2*u) + 104*u**3*v - 20*u**3*sqrt(u**2 + 2*u) + 32*u**3 - 5*u**2*v**4 - 4*u**2*v**3*sqrt(u**2 + 2*u) - 20*u**2*v**3 - 12*u**2*v**2*sqrt(u**2 + 2*u) - 42*u**2*v**2 - 28*u**2*v*sqrt(u**2 + 2*u) - 44*u**2*v - 20*u**2*sqrt(u**2 + 2*u) - u**2 - 2*u*v**4 + 12*u*v**3*sqrt(u**2 + 2*u) - 8*u*v**3 + 36*u*v**2*sqrt(u**2 + 2*u) - 20*u*v**2 + 36*u*v*sqrt(u**2 + 2*u) - 24*u*v + 12*u*sqrt(u**2 + 2*u) - 10*u + v**4 + 4*v**3 + 6*v**2 + 4*v + 1
    # h
    z0 = u**4*v**2 + 2*u**4*v + u**4 + 4*u**3*v**2 + 8*u**3*v + 6*u**3 + 6*u**2*v**2 - 2*u**2*v*sqrt(u**2 + 2*u) + 12*u**2*v - 2*u**2*sqrt(u**2 + 2*u) + 8*u**2 + 4*u*v**2 - 2*u*v*sqrt(u**2 + 2*u) + 2*u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 8*u*v + 2*u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u*sqrt(u**2 + 2*u) + 2*u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + v**2 + 2*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*v - 2*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 1
    # f
    z0 = u**4*v**2 + 2*u**4*v + u**4 + 4*u**3*v**2 + 8*u**3*v + 6*u**3 + 6*u**2*v**2 - 2*u**2*v*sqrt(u**2 + 2*u) + 12*u**2*v - 2*u**2*sqrt(u**2 + 2*u) + 8*u**2 + 4*u*v**2 - 2*u*v*sqrt(u**2 + 2*u) - 2*u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 8*u*v - 2*u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u*sqrt(u**2 + 2*u) - 2*u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + v**2 - 2*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*v + 2*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 1
    z0[z0 >= 0] = np.log(1 + z0[z0 >= 0])
    z0[z0 < 0] = -np.log(1 - z0[z0 < 0])
    return z0

def main():
    U, V = np.meshgrid(np.linspace(0.0, 3.0, 300), np.linspace(0.0, 3.0, 300))
    plt.imshow(z(U, V), origin='lower', extent = [0, 3, 0, 3], cmap=plt.cm.hsv)
    plt.colorbar()
    plt.show()

if __name__ == '__main__':
    main()