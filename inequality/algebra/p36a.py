from numpy import sqrt
import numpy as np
import matplotlib.pyplot as plt

def z(u, v):
    # x + y - x*y
    # z0 = u*v + u*sqrt(u**2 + 2*u) + u + v - sqrt(u**2 + 2*u) + 1
    # f - f1
    # z0 = 2*u**8*v**4 + 8*u**8*v**3 + 11*u**8*v**2 + 6*u**8*v + 16*u**7*v**4 + 64*u**7*v**3 + 88*u**7*v**2 + 48*u**7*v + 55*u**6*v**4 - 2*u**6*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 220*u**6*v**3 - 6*u**6*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 302*u**6*v**2 - 6*u**6*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 164*u**6*v - 2*u**6*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 3*u**6 + 106*u**5*v**4 - 12*u**5*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 424*u**5*v**3 - 36*u**5*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 580*u**5*v**2 - 36*u**5*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 312*u**5*v - 12*u**5*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 18*u**5 + 124*u**4*v**4 - 30*u**4*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 496*u**4*v**3 - 90*u**4*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 677*u**4*v**2 - 90*u**4*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 362*u**4*v - 30*u**4*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 41*u**4 + 88*u**3*v**4 - 40*u**3*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 352*u**3*v**3 - 120*u**3*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 484*u**3*v**2 - 120*u**3*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 264*u**3*v - 40*u**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 44*u**3 + 35*u**2*v**4 - 30*u**2*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 140*u**2*v**3 - 90*u**2*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 198*u**2*v**2 - 90*u**2*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 116*u**2*v - 30*u**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 23*u**2 + 6*u*v**4 - 12*u*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 24*u*v**3 - 36*u*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 36*u*v**2 - 36*u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 24*u*v - 12*u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 6*u - 2*v**3*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 6*v**2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 6*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u)
    # f1
    # z0 = 2*u**8*v**5 + 2*u**8*v**4*sqrt(u**2 + 2*u) + 10*u**8*v**4 + 8*u**8*v**3*sqrt(u**2 + 2*u) + 17*u**8*v**3 + 11*u**8*v**2*sqrt(u**2 + 2*u) + 11*u**8*v**2 + 6*u**8*v*sqrt(u**2 + 2*u) - 2*u**8 + 18*u**7*v**5 + 16*u**7*v**4*sqrt(u**2 + 2*u) + 90*u**7*v**4 + 64*u**7*v**3*sqrt(u**2 + 2*u) + 157*u**7*v**3 + 89*u**7*v**2*sqrt(u**2 + 2*u) + 111*u**7*v**2 + 50*u**7*v*sqrt(u**2 + 2*u) + 12*u**7*v + 2*u**7*sqrt(u**2 + 2*u) - 14*u**7 + 71*u**6*v**5 + 53*u**6*v**4*sqrt(u**2 + 2*u) + 355*u**6*v**4 + 212*u**6*v**3*sqrt(u**2 + 2*u) + 636*u**6*v**3 + 298*u**6*v**2*sqrt(u**2 + 2*u) + 488*u**6*v**2 + 172*u**6*v*sqrt(u**2 + 2*u) + 101*u**6*v + 17*u**6*sqrt(u**2 + 2*u) - 35*u**6 + 161*u**5*v**5 + 93*u**5*v**4*sqrt(u**2 + 2*u) + 805*u**5*v**4 + 372*u**5*v**3*sqrt(u**2 + 2*u) + 1480*u**5*v**3 + 530*u**5*v**2*sqrt(u**2 + 2*u) + 1220*u**5*v**2 + 316*u**5*v*sqrt(u**2 + 2*u) + 359*u**5*v + 57*u**5*sqrt(u**2 + 2*u) - 25*u**5 + 230*u**4*v**5 + 88*u**4*v**4*sqrt(u**2 + 2*u) + 1150*u**4*v**4 + 352*u**4*v**3*sqrt(u**2 + 2*u) + 2167*u**4*v**3 + 517*u**4*v**2*sqrt(u**2 + 2*u) + 1901*u**4*v**2 + 330*u**4*v*sqrt(u**2 + 2*u) + 703*u**4*v + 93*u**4*sqrt(u**2 + 2*u) + 49*u**4 + 212*u**3*v**5 + 34*u**3*v**4*sqrt(u**2 + 2*u) + 1060*u**3*v**4 + 136*u**3*v**3*sqrt(u**2 + 2*u) + 2047*u**3*v**3 + 227*u**3*v**2*sqrt(u**2 + 2*u) + 1901*u**3*v**2 + 182*u**3*v*sqrt(u**2 + 2*u) + 825*u**3*v + 73*u**3*sqrt(u**2 + 2*u) + 123*u**3 + 123*u**2*v**5 - 11*u**2*v**4*sqrt(u**2 + 2*u) + 615*u**2*v**4 - 44*u**2*v**3*sqrt(u**2 + 2*u) + 1220*u**2*v**3 - 34*u**2*v**2*sqrt(u**2 + 2*u) + 1200*u**2*v**2 + 20*u**2*v*sqrt(u**2 + 2*u) + 585*u**2*v + 21*u**2*sqrt(u**2 + 2*u) + 113*u**2 + 41*u*v**5 - 15*u*v**4*sqrt(u**2 + 2*u) + 205*u*v**4 - 60*u*v**3*sqrt(u**2 + 2*u) + 420*u*v**3 - 78*u*v**2*sqrt(u**2 + 2*u) + 440*u*v**2 - 36*u*v*sqrt(u**2 + 2*u) + 235*u*v - 3*u*sqrt(u**2 + 2*u) + 51*u + 6*v**5 - 4*v**4*sqrt(u**2 + 2*u) + 30*v**4 - 16*v**3*sqrt(u**2 + 2*u) + 64*v**3 - 24*v**2*sqrt(u**2 + 2*u) + 72*v**2 - 16*v*sqrt(u**2 + 2*u) + 42*v - 4*sqrt(u**2 + 2*u) + 10
    # U coeff in g
    # z0 = 2*u**8*v**4 + 8*u**8*v**3 + 11*u**8*v**2 + 6*u**8*v + 16*u**7*v**4 + 64*u**7*v**3 + 89*u**7*v**2 + 50*u**7*v + 2*u**7 + 53*u**6*v**4 + 212*u**6*v**3 + 298*u**6*v**2 + 172*u**6*v + 17*u**6 + 93*u**5*v**4 + 372*u**5*v**3 + 530*u**5*v**2 + 316*u**5*v + 57*u**5 + 88*u**4*v**4 + 352*u**4*v**3 + 517*u**4*v**2 + 330*u**4*v + 93*u**4 + 34*u**3*v**4 + 136*u**3*v**3 + 227*u**3*v**2 + 182*u**3*v + 73*u**3 - 11*u**2*v**4 - 44*u**2*v**3 - 34*u**2*v**2 + 20*u**2*v + 21*u**2 - 15*u*v**4 - 60*u*v**3 - 78*u*v**2 - 36*u*v - 3*u - 4*v**4 - 16*v**3 - 24*v**2 - 16*v - 4
    # g (a - b)
    # z0 = (2*u**8*v**4 + 8*u**8*v**3 + 11*u**8*v**2 + 6*u**8*v + 16*u**7*v**4 + 64*u**7*v**3 + 89*u**7*v**2 + 50*u**7*v + 2*u**7 + 53*u**6*v**4 + 212*u**6*v**3 + 298*u**6*v**2 + 172*u**6*v + 17*u**6 + 93*u**5*v**4 + 372*u**5*v**3 + 530*u**5*v**2 + 316*u**5*v + 57*u**5 + 88*u**4*v**4 + 352*u**4*v**3 + 517*u**4*v**2 + 330*u**4*v + 93*u**4 + 34*u**3*v**4 + 136*u**3*v**3 + 227*u**3*v**2 + 182*u**3*v + 73*u**3 - 11*u**2*v**4 - 44*u**2*v**3 - 34*u**2*v**2 + 20*u**2*v + 21*u**2 - 15*u*v**4 - 60*u*v**3 - 78*u*v**2 - 36*u*v - 3*u - 4*v**4 - 16*v**3 - 24*v**2 - 16*v - 4)*sqrt(u**2 + 2*u) + 2*u**8*v**5 + 10*u**8*v**4 + 17*u**8*v**3 + 11*u**8*v**2 - 2*u**8 + 18*u**7*v**5 + 90*u**7*v**4 + 157*u**7*v**3 + 111*u**7*v**2 + 12*u**7*v - 14*u**7 + 71*u**6*v**5 + 355*u**6*v**4 + 636*u**6*v**3 + 488*u**6*v**2 + 101*u**6*v - 35*u**6 + 161*u**5*v**5 + 805*u**5*v**4 + 1480*u**5*v**3 + 1220*u**5*v**2 + 359*u**5*v - 25*u**5 + 230*u**4*v**5 + 1150*u**4*v**4 + 2167*u**4*v**3 + 1901*u**4*v**2 + 703*u**4*v + 49*u**4 + 212*u**3*v**5 + 1060*u**3*v**4 + 2047*u**3*v**3 + 1901*u**3*v**2 + 825*u**3*v + 123*u**3 + 123*u**2*v**5 + 615*u**2*v**4 + 1220*u**2*v**3 + 1200*u**2*v**2 + 585*u**2*v + 113*u**2 + 41*u*v**5 + 205*u*v**4 + 420*u*v**3 + 440*u*v**2 + 235*u*v + 51*u + 6*v**5 + 30*v**4 + 64*v**3 + 72*v**2 + 42*v + 10
    # g1 (a + b)
    z0 = -(2*u**8*v**4 + 8*u**8*v**3 + 11*u**8*v**2 + 6*u**8*v + 16*u**7*v**4 + 64*u**7*v**3 + 89*u**7*v**2 + 50*u**7*v + 2*u**7 + 53*u**6*v**4 + 212*u**6*v**3 + 298*u**6*v**2 + 172*u**6*v + 17*u**6 + 93*u**5*v**4 + 372*u**5*v**3 + 530*u**5*v**2 + 316*u**5*v + 57*u**5 + 88*u**4*v**4 + 352*u**4*v**3 + 517*u**4*v**2 + 330*u**4*v + 93*u**4 + 34*u**3*v**4 + 136*u**3*v**3 + 227*u**3*v**2 + 182*u**3*v + 73*u**3 - 11*u**2*v**4 - 44*u**2*v**3 - 34*u**2*v**2 + 20*u**2*v + 21*u**2 - 15*u*v**4 - 60*u*v**3 - 78*u*v**2 - 36*u*v - 3*u - 4*v**4 - 16*v**3 - 24*v**2 - 16*v - 4)*sqrt(u**2 + 2*u) + 2*u**8*v**5 + 10*u**8*v**4 + 17*u**8*v**3 + 11*u**8*v**2 - 2*u**8 + 18*u**7*v**5 + 90*u**7*v**4 + 157*u**7*v**3 + 111*u**7*v**2 + 12*u**7*v - 14*u**7 + 71*u**6*v**5 + 355*u**6*v**4 + 636*u**6*v**3 + 488*u**6*v**2 + 101*u**6*v - 35*u**6 + 161*u**5*v**5 + 805*u**5*v**4 + 1480*u**5*v**3 + 1220*u**5*v**2 + 359*u**5*v - 25*u**5 + 230*u**4*v**5 + 1150*u**4*v**4 + 2167*u**4*v**3 + 1901*u**4*v**2 + 703*u**4*v + 49*u**4 + 212*u**3*v**5 + 1060*u**3*v**4 + 2047*u**3*v**3 + 1901*u**3*v**2 + 825*u**3*v + 123*u**3 + 123*u**2*v**5 + 615*u**2*v**4 + 1220*u**2*v**3 + 1200*u**2*v**2 + 585*u**2*v + 113*u**2 + 41*u*v**5 + 205*u*v**4 + 420*u*v**3 + 440*u*v**2 + 235*u*v + 51*u + 6*v**5 + 30*v**4 + 64*v**3 + 72*v**2 + 42*v + 10
    # g
    # z0 = u**4*v**2 + 2*u**4*v + u**2*v**4 + 2*u**2*v**3*sqrt(u**2 + 2*u) + 4*u**2*v**3 + 6*u**2*v**2*sqrt(u**2 + 2*u) + u**2*v**2 + 4*u**2*v*sqrt(u**2 + 2*u) - 6*u**2*v - u**2 + 2*u*v**4 + 8*u*v**3 + 12*u*v**2 + 2*u*v*sqrt(u**2 + 2*u) + 8*u*v + 2*u*sqrt(u**2 + 2*u) + v**4 - 2*v**3*sqrt(u**2 + 2*u) + 4*v**3 - 6*v**2*sqrt(u**2 + 2*u) + 6*v**2 - 6*v*sqrt(u**2 + 2*u) + 4*v - 2*sqrt(u**2 + 2*u) + 1
    # h
    # z0 = u**3 - u**2*v*sqrt(u**2 + 2*u) - u**2*sqrt(u**2 + 2*u) + u**2 - u*v*sqrt(u**2 + 2*u) + u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - u*sqrt(u**2 + 2*u) + u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u + v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u)
    # g
    # z0 = u**6*v**4 + 4*u**6*v**3 + 2*u**6*v**2 - 4*u**6*v + u**6 + 6*u**5*v**4 + 24*u**5*v**3 + 32*u**5*v**2 + 16*u**5*v + 10*u**5 + 11*u**4*v**4 - 12*u**4*v**3*sqrt(u**2 + 2*u) + 44*u**4*v**3 - 36*u**4*v**2*sqrt(u**2 + 2*u) + 98*u**4*v**2 - 28*u**4*v*sqrt(u**2 + 2*u) + 108*u**4*v - 4*u**4*sqrt(u**2 + 2*u) + 31*u**4 + 4*u**3*v**4 - 28*u**3*v**3*sqrt(u**2 + 2*u) + 16*u**3*v**3 - 84*u**3*v**2*sqrt(u**2 + 2*u) + 68*u**3*v**2 - 76*u**3*v*sqrt(u**2 + 2*u) + 104*u**3*v - 20*u**3*sqrt(u**2 + 2*u) + 32*u**3 - 5*u**2*v**4 - 4*u**2*v**3*sqrt(u**2 + 2*u) - 20*u**2*v**3 - 12*u**2*v**2*sqrt(u**2 + 2*u) - 42*u**2*v**2 - 28*u**2*v*sqrt(u**2 + 2*u) - 44*u**2*v - 20*u**2*sqrt(u**2 + 2*u) - u**2 - 2*u*v**4 + 12*u*v**3*sqrt(u**2 + 2*u) - 8*u*v**3 + 36*u*v**2*sqrt(u**2 + 2*u) - 20*u*v**2 + 36*u*v*sqrt(u**2 + 2*u) - 24*u*v + 12*u*sqrt(u**2 + 2*u) - 10*u + v**4 + 4*v**3 + 6*v**2 + 4*v + 1
    # h
    # z0 = u**4*v**2 + 2*u**4*v + u**4 + 4*u**3*v**2 + 8*u**3*v + 6*u**3 + 6*u**2*v**2 - 2*u**2*v*sqrt(u**2 + 2*u) + 12*u**2*v - 2*u**2*sqrt(u**2 + 2*u) + 8*u**2 + 4*u*v**2 - 2*u*v*sqrt(u**2 + 2*u) + 2*u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 8*u*v + 2*u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u*sqrt(u**2 + 2*u) + 2*u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + v**2 + 2*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*v - 2*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 1
    # f
    # z0 = u**4*v**2 + 2*u**4*v + u**4 + 4*u**3*v**2 + 8*u**3*v + 6*u**3 + 6*u**2*v**2 - 2*u**2*v*sqrt(u**2 + 2*u) + 12*u**2*v - 2*u**2*sqrt(u**2 + 2*u) + 8*u**2 + 4*u*v**2 - 2*u*v*sqrt(u**2 + 2*u) - 2*u*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 8*u*v - 2*u*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*u*sqrt(u**2 + 2*u) - 2*u*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + v**2 - 2*v*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 2*v + 2*sqrt(u**2 + 2*u)*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) - 2*sqrt(u**4*v**2 + 2*u**4*v + 4*u**3*v**2 + 8*u**3*v + 5*u**2*v**2 + 10*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u) + 1
    z0[z0 >= 0] = np.log(1 + z0[z0 >= 0])
    z0[z0 < 0] = -np.log(1 - z0[z0 < 0])
    return z0

def main():
    U, V = np.meshgrid(np.linspace(0.0, 3.0, 300), np.linspace(0.0, 3.0, 300))
    plt.imshow(z(U, V), origin='lower', extent = [0, 3, 0, 3], cmap=plt.cm.hsv)
    plt.colorbar()
    plt.show()

if __name__ == '__main__':
    main()