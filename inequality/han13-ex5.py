from sympy import *

# http://xbna.pku.edu.cn/CN/Y2013/V49/I4/545 , ex 4.5

def main():
    a, b, c, d = symbols('a, b, c, d', negative = False)
    p, q, r, s, t = symbols('p, q, r, s, t', negative = False)
    # (0, 0, 0, 0)
    f = (a**2 + 3)*(b**2 + 3)*(c**2 + 3)*(d**2 + 3) - 16*a**2 - 81
    # (sqrt(5)/3, sqrt(5)/3, 0, 0)
    f = (a**2 + 3)*(b**2 + 3)*(c**2 + 3)*(d**2 + 3) - 16*(a + b)**2 - S(704)/9
    # (1, 1, 1, 0)
    f = (a**2 + 3)*(b**2 + 3)*(c**2 + 3)*(d**2 + 3) - 16*(a + b + c)**2 - 48
    # (1, 1, 1, 1)
    f = (a**2 + 3)*(b**2 + 3)*(c**2 + 3)*(d**2 + 3) - 16*(a + b + c + d)**2
    print('f(abcd1) =', factor(f.subs(d, 1/(1 + p)).subs(c, 1/(1 + p + q)).subs(b, 1/(1 + p + q + r)).subs(a, 1/(1 + p + q + r + s))))
    print('f(abc1d) =', factor(f.subs(d, 1 + p).subs(c, 1/(1 + q)).subs(b, 1/(1 + q + r)).subs(a, 1/(1 + q + r + s))))
    print('f(ab1cd) =', factor(f.subs(d, 1 + p + q).subs(c, 1 + p).subs(b, 1/(1 + r)).subs(a, 1/(1 + r + s))))
    print('f(a1bcd) =', factor(f.subs(d, 1 + p + q + r).subs(c, 1 + p + q).subs(b, 1 + p).subs(a, 1/(1 + s))))
    print('f(1abcd) =', factor(f.subs(d, 1 + p + q + r + s).subs(c, 1 + p + q + r).subs(b, 1 + p + q).subs(a, 1 + p)))
    # f(abc1d)
    g1 = 11*p**2*q**6 + 44*p**2*q**5*r + 22*p**2*q**5*s + 66*p**2*q**5 + 66*p**2*q**4*r**2 + 66*p**2*q**4*r*s + 220*p**2*q**4*r + 11*p**2*q**4*s**2 + 110*p**2*q**4*s + 192*p**2*q**4 + 44*p**2*q**3*r**3 + 66*p**2*q**3*r**2*s + 264*p**2*q**3*r**2 + 22*p**2*q**3*r*s**2 + 264*p**2*q**3*r*s + 512*p**2*q**3*r + 44*p**2*q**3*s**2 + 256*p**2*q**3*s + 328*p**2*q**3 + 11*p**2*q**2*r**4 + 22*p**2*q**2*r**3*s + 132*p**2*q**2*r**3 + 11*p**2*q**2*r**2*s**2 + 198*p**2*q**2*r**2*s + 468*p**2*q**2*r**2 + 66*p**2*q**2*r*s**2 + 468*p**2*q**2*r*s + 656*p**2*q**2*r + 84*p**2*q**2*s**2 + 328*p**2*q**2*s + 336*p**2*q**2 + 22*p**2*q*r**4 + 44*p**2*q*r**3*s + 168*p**2*q*r**3 + 22*p**2*q*r**2*s**2 + 252*p**2*q*r**2*s + 408*p**2*q*r**2 + 84*p**2*q*r*s**2 + 408*p**2*q*r*s + 448*p**2*q*r + 80*p**2*q*s**2 + 224*p**2*q*s + 192*p**2*q + 20*p**2*r**4 + 40*p**2*r**3*s + 80*p**2*r**3 + 20*p**2*r**2*s**2 + 120*p**2*r**2*s + 144*p**2*r**2 + 40*p**2*r*s**2 + 144*p**2*r*s + 128*p**2*r + 32*p**2*s**2 + 64*p**2*s + 48*p**2 + 22*p*q**6 + 88*p*q**5*r + 44*p*q**5*s + 36*p*q**5 + 132*p*q**4*r**2 + 132*p*q**4*r*s + 120*p*q**4*r + 22*p*q**4*s**2 + 60*p*q**4*s - 96*p*q**4 + 88*p*q**3*r**3 + 132*p*q**3*r**2*s + 144*p*q**3*r**2 + 44*p*q**3*r*s**2 + 144*p*q**3*r*s - 256*p*q**3*r + 24*p*q**3*s**2 - 128*p*q**3*s - 304*p*q**3 + 22*p*q**2*r**4 + 44*p*q**2*r**3*s + 72*p*q**2*r**3 + 22*p*q**2*r**2*s**2 + 108*p*q**2*r**2*s - 216*p*q**2*r**2 + 36*p*q**2*r*s**2 - 216*p*q**2*r*s - 608*p*q**2*r - 24*p*q**2*s**2 - 304*p*q**2*s - 288*p*q**2 + 12*p*q*r**4 + 24*p*q*r**3*s - 48*p*q*r**3 + 12*p*q*r**2*s**2 - 72*p*q*r**2*s - 336*p*q*r**2 - 24*p*q*r*s**2 - 336*p*q*r*s - 384*p*q*r - 32*p*q*s**2 - 192*p*q*s - 96*p*q + 8*p*r**4 + 16*p*r**3*s - 32*p*r**3 + 8*p*r**2*s**2 - 48*p*r**2*s - 96*p*r**2 - 16*p*r*s**2 - 96*p*r*s - 64*p*r - 32*p*s + 92*q**6 + 368*q**5*r + 184*q**5*s + 456*q**5 + 552*q**4*r**2 + 552*q**4*r*s + 1520*q**4*r + 92*q**4*s**2 + 760*q**4*s + 864*q**4 + 368*q**3*r**3 + 552*q**3*r**2*s + 1824*q**3*r**2 + 184*q**3*r*s**2 + 1824*q**3*r*s + 2304*q**3*r + 304*q**3*s**2 + 1152*q**3*s + 736*q**3 + 92*q**2*r**4 + 184*q**2*r**3*s + 912*q**2*r**3 + 92*q**2*r**2*s**2 + 1368*q**2*r**2*s + 2096*q**2*r**2 + 456*q**2*r*s**2 + 2096*q**2*r*s + 1472*q**2*r + 368*q**2*s**2 + 736*q**2*s + 240*q**2 + 152*q*r**4 + 304*q*r**3*s + 736*q*r**3 + 152*q*r**2*s**2 + 1104*q*r**2*s + 928*q*r**2 + 368*q*r*s**2 + 928*q*r*s + 320*q*r + 192*q*s**2 + 160*q*s + 80*r**4 + 160*r**3*s + 192*r**3 + 80*r**2*s**2 + 288*r**2*s + 128*r**2 + 96*r*s**2 + 128*r*s + 48*s**2
    # f(ab1cd)
    g2 = 9*p**4*r**4 + 18*p**4*r**3*s + 36*p**4*r**3 + 9*p**4*r**2*s**2 + 54*p**4*r**2*s + 60*p**4*r**2 + 18*p**4*r*s**2 + 60*p**4*r*s + 48*p**4*r + 12*p**4*s**2 + 24*p**4*s + 16*p**4 + 18*p**3*q*r**4 + 36*p**3*q*r**3*s + 72*p**3*q*r**3 + 18*p**3*q*r**2*s**2 + 108*p**3*q*r**2*s + 120*p**3*q*r**2 + 36*p**3*q*r*s**2 + 120*p**3*q*r*s + 96*p**3*q*r + 24*p**3*q*s**2 + 48*p**3*q*s + 32*p**3*q + 36*p**3*r**4 + 72*p**3*r**3*s + 144*p**3*r**3 + 36*p**3*r**2*s**2 + 216*p**3*r**2*s + 240*p**3*r**2 + 72*p**3*r*s**2 + 240*p**3*r*s + 192*p**3*r + 48*p**3*s**2 + 96*p**3*s + 64*p**3 + 9*p**2*q**2*r**4 + 18*p**2*q**2*r**3*s + 36*p**2*q**2*r**3 + 9*p**2*q**2*r**2*s**2 + 54*p**2*q**2*r**2*s + 60*p**2*q**2*r**2 + 18*p**2*q**2*r*s**2 + 60*p**2*q**2*r*s + 48*p**2*q**2*r + 12*p**2*q**2*s**2 + 24*p**2*q**2*s + 16*p**2*q**2 + 54*p**2*q*r**4 + 108*p**2*q*r**3*s + 216*p**2*q*r**3 + 54*p**2*q*r**2*s**2 + 324*p**2*q*r**2*s + 360*p**2*q*r**2 + 108*p**2*q*r*s**2 + 360*p**2*q*r*s + 288*p**2*q*r + 72*p**2*q*s**2 + 144*p**2*q*s + 96*p**2*q + 44*p**2*r**4 + 88*p**2*r**3*s + 176*p**2*r**3 + 44*p**2*r**2*s**2 + 264*p**2*r**2*s + 336*p**2*r**2 + 88*p**2*r*s**2 + 336*p**2*r*s + 320*p**2*r + 80*p**2*s**2 + 160*p**2*s + 128*p**2 + 18*p*q**2*r**4 + 36*p*q**2*r**3*s + 72*p*q**2*r**3 + 18*p*q**2*r**2*s**2 + 108*p*q**2*r**2*s + 120*p*q**2*r**2 + 36*p*q**2*r*s**2 + 120*p*q**2*r*s + 96*p*q**2*r + 24*p*q**2*s**2 + 48*p*q**2*s + 32*p*q**2 + 44*p*q*r**4 + 88*p*q*r**3*s + 176*p*q*r**3 + 44*p*q*r**2*s**2 + 264*p*q*r**2*s + 336*p*q*r**2 + 88*p*q*r*s**2 + 336*p*q*r*s + 320*p*q*r + 80*p*q*s**2 + 160*p*q*s + 128*p*q + 16*p*r**4 + 32*p*r**3*s - 64*p*r**3 + 16*p*r**2*s**2 - 96*p*r**2*s - 192*p*r**2 - 32*p*r*s**2 - 192*p*r*s - 128*p*r - 64*p*s + 20*q**2*r**4 + 40*q**2*r**3*s + 80*q**2*r**3 + 20*q**2*r**2*s**2 + 120*q**2*r**2*s + 144*q**2*r**2 + 40*q**2*r*s**2 + 144*q**2*r*s + 128*q**2*r + 32*q**2*s**2 + 64*q**2*s + 48*q**2 + 8*q*r**4 + 16*q*r**3*s - 32*q*r**3 + 8*q*r**2*s**2 - 48*q*r**2*s - 96*q*r**2 - 16*q*r*s**2 - 96*q*r*s - 64*q*r - 32*q*s + 80*r**4 + 160*r**3*s + 192*r**3 + 80*r**2*s**2 + 288*r**2*s + 128*r**2 + 96*r*s**2 + 128*r*s + 48*s**2
    # f(a1bcd)
    g3 = 3*p**6*s**2 + 6*p**6*s + 4*p**6 + 12*p**5*q*s**2 + 24*p**5*q*s + 16*p**5*q + 6*p**5*r*s**2 + 12*p**5*r*s + 8*p**5*r + 18*p**5*s**2 + 36*p**5*s + 24*p**5 + 18*p**4*q**2*s**2 + 36*p**4*q**2*s + 24*p**4*q**2 + 18*p**4*q*r*s**2 + 36*p**4*q*r*s + 24*p**4*q*r + 60*p**4*q*s**2 + 120*p**4*q*s + 80*p**4*q + 3*p**4*r**2*s**2 + 6*p**4*r**2*s + 4*p**4*r**2 + 30*p**4*r*s**2 + 60*p**4*r*s + 40*p**4*r + 72*p**4*s**2 + 144*p**4*s + 96*p**4 + 12*p**3*q**3*s**2 + 24*p**3*q**3*s + 16*p**3*q**3 + 18*p**3*q**2*r*s**2 + 36*p**3*q**2*r*s + 24*p**3*q**2*r + 72*p**3*q**2*s**2 + 144*p**3*q**2*s + 96*p**3*q**2 + 6*p**3*q*r**2*s**2 + 12*p**3*q*r**2*s + 8*p**3*q*r**2 + 72*p**3*q*r*s**2 + 144*p**3*q*r*s + 96*p**3*q*r + 192*p**3*q*s**2 + 384*p**3*q*s + 256*p**3*q + 12*p**3*r**2*s**2 + 24*p**3*r**2*s + 16*p**3*r**2 + 96*p**3*r*s**2 + 192*p**3*r*s + 128*p**3*r + 168*p**3*s**2 + 336*p**3*s + 224*p**3 + 3*p**2*q**4*s**2 + 6*p**2*q**4*s + 4*p**2*q**4 + 6*p**2*q**3*r*s**2 + 12*p**2*q**3*r*s + 8*p**2*q**3*r + 36*p**2*q**3*s**2 + 72*p**2*q**3*s + 48*p**2*q**3 + 3*p**2*q**2*r**2*s**2 + 6*p**2*q**2*r**2*s + 4*p**2*q**2*r**2 + 54*p**2*q**2*r*s**2 + 108*p**2*q**2*r*s + 72*p**2*q**2*r + 180*p**2*q**2*s**2 + 360*p**2*q**2*s + 240*p**2*q**2 + 18*p**2*q*r**2*s**2 + 36*p**2*q*r**2*s + 24*p**2*q*r**2 + 180*p**2*q*r*s**2 + 360*p**2*q*r*s + 240*p**2*q*r + 336*p**2*q*s**2 + 672*p**2*q*s + 448*p**2*q + 36*p**2*r**2*s**2 + 72*p**2*r**2*s + 48*p**2*r**2 + 168*p**2*r*s**2 + 336*p**2*r*s + 224*p**2*r + 144*p**2*s**2 + 288*p**2*s + 240*p**2 + 6*p*q**4*s**2 + 12*p*q**4*s + 8*p*q**4 + 12*p*q**3*r*s**2 + 24*p*q**3*r*s + 16*p*q**3*r + 72*p*q**3*s**2 + 144*p*q**3*s + 96*p*q**3 + 6*p*q**2*r**2*s**2 + 12*p*q**2*r**2*s + 8*p*q**2*r**2 + 108*p*q**2*r*s**2 + 216*p*q**2*r*s + 144*p*q**2*r + 216*p*q**2*s**2 + 432*p*q**2*s + 288*p*q**2 + 36*p*q*r**2*s**2 + 72*p*q*r**2*s + 48*p*q*r**2 + 216*p*q*r*s**2 + 432*p*q*r*s + 288*p*q*r + 192*p*q*s**2 + 384*p*q*s + 320*p*q + 48*p*r**2*s**2 + 96*p*r**2*s + 64*p*r**2 + 96*p*r*s**2 + 192*p*r*s + 160*p*r - 96*p*s + 12*q**4*s**2 + 24*q**4*s + 16*q**4 + 24*q**3*r*s**2 + 48*q**3*r*s + 32*q**3*r + 48*q**3*s**2 + 96*q**3*s + 64*q**3 + 12*q**2*r**2*s**2 + 24*q**2*r**2*s + 16*q**2*r**2 + 72*q**2*r*s**2 + 144*q**2*r*s + 96*q**2*r + 80*q**2*s**2 + 160*q**2*s + 128*q**2 + 24*q*r**2*s**2 + 48*q*r**2*s + 32*q*r**2 + 80*q*r*s**2 + 160*q*r*s + 128*q*r - 64*q*s + 32*r**2*s**2 + 64*r**2*s + 48*r**2 - 32*r*s + 48*s**2
    print('g1 =', Poly(g1).homogenize(t).expr)
    print('g2 =', Poly(g2).homogenize(t).expr)
    print('g3 =', Poly(g3).homogenize(t).expr)

if __name__ == '__main__':
    main()