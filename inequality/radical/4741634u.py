from sympy import *

# https://math.stackexchange.com/q/4741634

def main():
    u, v, x, y, z, U, V = symbols('u, v, x, y, z, U, V', negative = False)
    g = x**2 + y**2 + z**2 + x*y*z
    z = solve(Eq(g, 4), z)[1]
    print('z =', z)
    # constraint: (x - 2)*(x + 2)*(y - 2)*(y + 2) - x**2*y**2 >= 0 -> y <= sqrt(4 - x**2)
    f = 4*(x*y + y*z + z*x - x*y*z) - (x**2*y + z)*(y**2*z + x)*(z**2*x + y)
    # U = sqrt(u*(u + 2))
    # x = 2/(1 + u)
    # y = sqrt(4 - x**2)/(1 + v) = 2*U/(1 + u)/(1 + v)
    # V = sqrt((1 + u)**2*(1 + v)**2 - u*(u + 2))
    # z = (sqrt((x**2 - 4)*(y**2 - 4)) - x*y)/2 = 2*U*(V - 1)/(1 + u)**2/(1 + v)
    x = 2/(1 + u)
    y = 2*U/(1 + u)/(1 + v)
    z = 2*U*(V - 1)/(1 + u)**2/(1 + v)
    g = x**2 + y**2 + z**2 + x*y*z
    print('x**2 + y**2 + z**2 + x*y*z =', factor(g))
    U2 = u*(u + 2)
    V2 = (1 + u)**2*(1 + v)**2 - u*(u + 2)
    g = 4*(U2*V2 + U2*u**2 + 2*U2*u + u**2*v**2 + 2*u**2*v + u**2 + 2*u*v**2 + 4*u*v + 2*u + v**2 + 2*v + 1)/((u + 1)**4*(v + 1)**2)
    print('x**2 + y**2 + z**2 + x*y*z =', factor(g))
    f = 4*(x*y + y*z + z*x - x*y*z) - (x**2*y + z)*(y**2*z + x)*(z**2*x + y)
    print('f =', factor(f))
    f = -16*U2**2*U*V2**2*u - 16*U2**2*U*V2**2 + 64*U2**2*U*V2*V*u - 96*U2**2*U*V2*u + 96*U2**2*U*V2 + 64*U2**2*U*V*u - 128*U2**2*U*V - 16*U2**2*U*u + 48*U2**2*U - 4*U2**2*V2*u**5*v - 4*U2**2*V2*u**5 - 20*U2**2*V2*u**4*v - 20*U2**2*V2*u**4 - 40*U2**2*V2*u**3*v - 40*U2**2*V2*u**3 - 40*U2**2*V2*u**2*v - 40*U2**2*V2*u**2 - 20*U2**2*V2*u*v - 20*U2**2*V2*u - 4*U2**2*V2*v - 4*U2**2*V2 + 8*U2**2*V*u**5*v + 8*U2**2*V*u**5 + 24*U2**2*V*u**4*v + 24*U2**2*V*u**4 + 16*U2**2*V*u**3*v + 16*U2**2*V*u**3 - 16*U2**2*V*u**2*v - 16*U2**2*V*u**2 - 24*U2**2*V*u*v - 24*U2**2*V*u - 8*U2**2*V*v - 8*U2**2*V - 4*U2**2*u**5*v - 4*U2**2*u**5 - 4*U2**2*u**4*v - 4*U2**2*u**4 + 24*U2**2*u**3*v + 24*U2**2*u**3 + 56*U2**2*u**2*v + 56*U2**2*u**2 + 44*U2**2*u*v + 44*U2**2*u + 12*U2**2*v + 12*U2**2 - 4*U2*V2*V*u**4*v**3 - 12*U2*V2*V*u**4*v**2 - 12*U2*V2*V*u**4*v - 4*U2*V2*V*u**4 - 16*U2*V2*V*u**3*v**3 - 48*U2*V2*V*u**3*v**2 - 48*U2*V2*V*u**3*v - 16*U2*V2*V*u**3 - 24*U2*V2*V*u**2*v**3 - 72*U2*V2*V*u**2*v**2 - 72*U2*V2*V*u**2*v - 24*U2*V2*V*u**2 - 16*U2*V2*V*u*v**3 - 48*U2*V2*V*u*v**2 - 48*U2*V2*V*u*v - 16*U2*V2*V*u - 4*U2*V2*V*v**3 - 12*U2*V2*V*v**2 - 12*U2*V2*V*v - 4*U2*V2*V + 12*U2*V2*u**4*v**3 + 36*U2*V2*u**4*v**2 + 36*U2*V2*u**4*v + 12*U2*V2*u**4 + 32*U2*V2*u**3*v**3 + 96*U2*V2*u**3*v**2 + 96*U2*V2*u**3*v + 32*U2*V2*u**3 + 24*U2*V2*u**2*v**3 + 72*U2*V2*u**2*v**2 + 72*U2*V2*u**2*v + 24*U2*V2*u**2 - 4*U2*V2*v**3 - 12*U2*V2*v**2 - 12*U2*V2*v - 4*U2*V2 - 12*U2*V*u**4*v**3 - 36*U2*V*u**4*v**2 - 36*U2*V*u**4*v - 12*U2*V*u**4 - 16*U2*V*u**3*v**3 - 48*U2*V*u**3*v**2 - 48*U2*V*u**3*v - 16*U2*V*u**3 + 24*U2*V*u**2*v**3 + 72*U2*V*u**2*v**2 + 72*U2*V*u**2*v + 24*U2*V*u**2 + 48*U2*V*u*v**3 + 144*U2*V*u*v**2 + 144*U2*V*u*v + 48*U2*V*u + 20*U2*V*v**3 + 60*U2*V*v**2 + 60*U2*V*v + 20*U2*V + 4*U2*u**4*v**3 + 12*U2*u**4*v**2 + 12*U2*u**4*v + 4*U2*u**4 - 24*U2*u**2*v**3 - 72*U2*u**2*v**2 - 72*U2*u**2*v - 24*U2*u**2 - 32*U2*u*v**3 - 96*U2*u*v**2 - 96*U2*u*v - 32*U2*u - 12*U2*v**3 - 36*U2*v**2 - 36*U2*v - 12*U2 + 2*U*V*u**9*v**4 + 8*U*V*u**9*v**3 + 12*U*V*u**9*v**2 + 8*U*V*u**9*v + 2*U*V*u**9 + 13*U*V*u**8*v**4 + 52*U*V*u**8*v**3 + 78*U*V*u**8*v**2 + 52*U*V*u**8*v + 13*U*V*u**8 + 32*U*V*u**7*v**4 + 128*U*V*u**7*v**3 + 192*U*V*u**7*v**2 + 128*U*V*u**7*v + 32*U*V*u**7 + 28*U*V*u**6*v**4 + 112*U*V*u**6*v**3 + 168*U*V*u**6*v**2 + 112*U*V*u**6*v + 28*U*V*u**6 - 28*U*V*u**5*v**4 - 112*U*V*u**5*v**3 - 168*U*V*u**5*v**2 - 112*U*V*u**5*v - 28*U*V*u**5 - 98*U*V*u**4*v**4 - 392*U*V*u**4*v**3 - 588*U*V*u**4*v**2 - 392*U*V*u**4*v - 98*U*V*u**4 - 112*U*V*u**3*v**4 - 448*U*V*u**3*v**3 - 672*U*V*u**3*v**2 - 448*U*V*u**3*v - 112*U*V*u**3 - 68*U*V*u**2*v**4 - 272*U*V*u**2*v**3 - 408*U*V*u**2*v**2 - 272*U*V*u**2*v - 68*U*V*u**2 - 22*U*V*u*v**4 - 88*U*V*u*v**3 - 132*U*V*u*v**2 - 88*U*V*u*v - 22*U*V*u - 3*U*V*v**4 - 12*U*V*v**3 - 18*U*V*v**2 - 12*U*V*v - 3*U*V - 2*U*u**9*v**4 - 8*U*u**9*v**3 - 12*U*u**9*v**2 - 8*U*u**9*v - 2*U*u**9 - 13*U*u**8*v**4 - 52*U*u**8*v**3 - 78*U*u**8*v**2 - 52*U*u**8*v - 13*U*u**8 - 36*U*u**7*v**4 - 144*U*u**7*v**3 - 216*U*u**7*v**2 - 144*U*u**7*v - 36*U*u**7 - 56*U*u**6*v**4 - 224*U*u**6*v**3 - 336*U*u**6*v**2 - 224*U*u**6*v - 56*U*u**6 - 56*U*u**5*v**4 - 224*U*u**5*v**3 - 336*U*u**5*v**2 - 224*U*u**5*v - 56*U*u**5 - 42*U*u**4*v**4 - 168*U*u**4*v**3 - 252*U*u**4*v**2 - 168*U*u**4*v - 42*U*u**4 - 28*U*u**3*v**4 - 112*U*u**3*v**3 - 168*U*u**3*v**2 - 112*U*u**3*v - 28*U*u**3 - 16*U*u**2*v**4 - 64*U*u**2*v**3 - 96*U*u**2*v**2 - 64*U*u**2*v - 16*U*u**2 - 6*U*u*v**4 - 24*U*u*v**3 - 36*U*u*v**2 - 24*U*u*v - 6*U*u - U*v**4 - 4*U*v**3 - 6*U*v**2 - 4*U*v - U + 2*V*u**9*v**5 + 10*V*u**9*v**4 + 20*V*u**9*v**3 + 20*V*u**9*v**2 + 10*V*u**9*v + 2*V*u**9 + 18*V*u**8*v**5 + 90*V*u**8*v**4 + 180*V*u**8*v**3 + 180*V*u**8*v**2 + 90*V*u**8*v + 18*V*u**8 + 72*V*u**7*v**5 + 360*V*u**7*v**4 + 720*V*u**7*v**3 + 720*V*u**7*v**2 + 360*V*u**7*v + 72*V*u**7 + 168*V*u**6*v**5 + 840*V*u**6*v**4 + 1680*V*u**6*v**3 + 1680*V*u**6*v**2 + 840*V*u**6*v + 168*V*u**6 + 252*V*u**5*v**5 + 1260*V*u**5*v**4 + 2520*V*u**5*v**3 + 2520*V*u**5*v**2 + 1260*V*u**5*v + 252*V*u**5 + 252*V*u**4*v**5 + 1260*V*u**4*v**4 + 2520*V*u**4*v**3 + 2520*V*u**4*v**2 + 1260*V*u**4*v + 252*V*u**4 + 168*V*u**3*v**5 + 840*V*u**3*v**4 + 1680*V*u**3*v**3 + 1680*V*u**3*v**2 + 840*V*u**3*v + 168*V*u**3 + 72*V*u**2*v**5 + 360*V*u**2*v**4 + 720*V*u**2*v**3 + 720*V*u**2*v**2 + 360*V*u**2*v + 72*V*u**2 + 18*V*u*v**5 + 90*V*u*v**4 + 180*V*u*v**3 + 180*V*u*v**2 + 90*V*u*v + 18*V*u + 2*V*v**5 + 10*V*v**4 + 20*V*v**3 + 20*V*v**2 + 10*V*v + 2*V + 2*u**10*v**5 + 10*u**10*v**4 + 20*u**10*v**3 + 20*u**10*v**2 + 10*u**10*v + 2*u**10 + 18*u**9*v**5 + 90*u**9*v**4 + 180*u**9*v**3 + 180*u**9*v**2 + 90*u**9*v + 18*u**9 + 72*u**8*v**5 + 360*u**8*v**4 + 720*u**8*v**3 + 720*u**8*v**2 + 360*u**8*v + 72*u**8 + 168*u**7*v**5 + 840*u**7*v**4 + 1680*u**7*v**3 + 1680*u**7*v**2 + 840*u**7*v + 168*u**7 + 252*u**6*v**5 + 1260*u**6*v**4 + 2520*u**6*v**3 + 2520*u**6*v**2 + 1260*u**6*v + 252*u**6 + 252*u**5*v**5 + 1260*u**5*v**4 + 2520*u**5*v**3 + 2520*u**5*v**2 + 1260*u**5*v + 252*u**5 + 168*u**4*v**5 + 840*u**4*v**4 + 1680*u**4*v**3 + 1680*u**4*v**2 + 840*u**4*v + 168*u**4 + 72*u**3*v**5 + 360*u**3*v**4 + 720*u**3*v**3 + 720*u**3*v**2 + 360*u**3*v + 72*u**3 + 18*u**2*v**5 + 90*u**2*v**4 + 180*u**2*v**3 + 180*u**2*v**2 + 90*u**2*v + 18*u**2 + 2*u*v**5 + 10*u*v**4 + 20*u*v**3 + 20*u*v**2 + 10*u*v + 2*u
    print('f =', factor(f))
    p = Poly(2*U*V*u**9*v**4 + 8*U*V*u**9*v**3 + 12*U*V*u**9*v**2 + 8*U*V*u**9*v + 2*U*V*u**9 + 13*U*V*u**8*v**4 + 52*U*V*u**8*v**3 + 78*U*V*u**8*v**2 + 52*U*V*u**8*v + 13*U*V*u**8 + 32*U*V*u**7*v**4 + 128*U*V*u**7*v**3 + 256*U*V*u**7*v**2 + 256*U*V*u**7*v + 32*U*V*u**7 + 28*U*V*u**6*v**4 + 112*U*V*u**6*v**3 + 552*U*V*u**6*v**2 + 880*U*V*u**6*v + 28*U*V*u**6 - 28*U*V*u**5*v**4 - 112*U*V*u**5*v**3 + 664*U*V*u**5*v**2 + 1552*U*V*u**5*v + 100*U*V*u**5 - 98*U*V*u**4*v**4 - 392*U*V*u**4*v**3 + 180*U*V*u**4*v**2 + 1144*U*V*u**4*v + 286*U*V*u**4 - 112*U*V*u**3*v**4 - 448*U*V*u**3*v**3 - 416*U*V*u**3*v**2 + 64*U*V*u**3*v - 112*U*V*u**3 - 68*U*V*u**2*v**4 - 272*U*V*u**2*v**3 - 408*U*V*u**2*v**2 - 272*U*V*u**2*v - 580*U*V*u**2 - 22*U*V*u*v**4 - 88*U*V*u*v**3 - 132*U*V*u*v**2 - 88*U*V*u*v - 22*U*V*u - 3*U*V*v**4 - 12*U*V*v**3 - 18*U*V*v**2 - 12*U*V*v - 3*U*V - 18*U*u**9*v**4 - 72*U*u**9*v**3 - 76*U*u**9*v**2 - 8*U*u**9*v - 2*U*u**9 - 157*U*u**8*v**4 - 628*U*u**8*v**3 - 654*U*u**8*v**2 - 52*U*u**8*v - 13*U*u**8 - 580*U*u**7*v**4 - 2320*U*u**7*v**3 - 2520*U*u**7*v**2 - 400*U*u**7*v - 36*U*u**7 - 1176*U*u**6*v**4 - 4704*U*u**6*v**3 - 5520*U*u**6*v**2 - 1632*U*u**6*v - 56*U*u**6 - 1416*U*u**5*v**4 - 5664*U*u**5*v**3 - 7056*U*u**5*v**2 - 2784*U*u**5*v - 184*U*u**5 - 1018*U*u**4*v**4 - 4072*U*u**4*v**3 - 4860*U*u**4*v**2 - 1576*U*u**4*v - 426*U*u**4 - 412*U*u**3*v**4 - 1648*U*u**3*v**3 - 1448*U*u**3*v**2 + 400*U*u**3*v - 28*U*u**3 - 80*U*u**2*v**4 - 320*U*u**2*v**3 - 96*U*u**2*v**2 + 448*U*u**2*v + 496*U*u**2 - 6*U*u*v**4 - 24*U*u*v**3 - 36*U*u*v**2 - 24*U*u*v - 6*U*u - U*v**4 - 4*U*v**3 - 6*U*v**2 - 4*U*v - U + 2*V*u**9*v**5 + 10*V*u**9*v**4 + 20*V*u**9*v**3 + 20*V*u**9*v**2 + 18*V*u**9*v + 10*V*u**9 + 14*V*u**8*v**5 + 70*V*u**8*v**4 + 144*V*u**8*v**3 + 152*V*u**8*v**2 + 138*V*u**8*v + 74*V*u**8 + 40*V*u**7*v**5 + 200*V*u**7*v**4 + 432*V*u**7*v**3 + 496*V*u**7*v**2 + 440*V*u**7*v + 216*V*u**7 + 60*V*u**6*v**5 + 300*V*u**6*v**4 + 692*V*u**6*v**3 + 876*V*u**6*v**2 + 720*V*u**6*v + 296*V*u**6 + 52*V*u**5*v**5 + 260*V*u**5*v**4 + 656*V*u**5*v**3 + 928*V*u**5*v**2 + 644*V*u**5*v + 164*V*u**5 + 32*V*u**4*v**5 + 160*V*u**4*v**4 + 476*V*u**4*v**3 + 788*V*u**4*v**2 + 460*V*u**4*v + 20*V*u**4 + 24*V*u**3*v**5 + 120*V*u**3*v**4 + 416*V*u**3*v**3 + 768*V*u**3*v**2 + 520*V*u**3*v + 72*V*u**3 + 20*V*u**2*v**5 + 100*V*u**2*v**4 + 332*V*u**2*v**3 + 596*V*u**2*v**2 + 464*V*u**2*v + 120*V*u**2 + 10*V*u*v**5 + 50*V*u*v**4 + 140*V*u*v**3 + 220*V*u*v**2 + 170*V*u*v + 50*V*u + 2*V*v**5 + 10*V*v**4 + 20*V*v**3 + 20*V*v**2 + 10*V*v + 2*V - 4*u**11*v**3 - 12*u**11*v**2 - 8*u**11*v + 2*u**10*v**5 + 10*u**10*v**4 - 24*u**10*v**3 - 112*u**10*v**2 - 78*u**10*v + 2*u**10 + 18*u**9*v**5 + 90*u**9*v**4 - 32*u**9*v**3 - 456*u**9*v**2 - 342*u**9*v + 10*u**9 + 84*u**8*v**5 + 420*u**8*v**4 + 240*u**8*v**3 - 960*u**8*v**2 - 848*u**8*v + 16*u**8 + 248*u**7*v**5 + 1240*u**7*v**4 + 1364*u**7*v**3 - 868*u**7*v**2 - 1216*u**7*v + 24*u**7 + 464*u**6*v**5 + 2320*u**6*v**4 + 3240*u**6*v**3 + 440*u**6*v**2 - 820*u**6*v + 124*u**6 + 532*u**5*v**5 + 2660*u**5*v**4 + 4180*u**5*v**3 + 1900*u**5*v**2 + 188*u**5*v + 340*u**5 + 348*u**4*v**5 + 1740*u**4*v**4 + 2912*u**4*v**3 + 1776*u**4*v**2 + 656*u**4*v + 400*u**4 + 104*u**3*v**5 + 520*u**3*v**4 + 848*u**3*v**3 + 464*u**3*v**2 + 200*u**3*v + 168*u**3 - 2*u**2*v**5 - 10*u**2*v**4 - 96*u**2*v**3 - 248*u**2*v**2 - 190*u**2*v - 30*u**2 - 6*u*v**5 - 30*u*v**4 - 84*u*v**3 - 132*u*v**2 - 102*u*v - 30*u, U, V)
    print(f'f = ({p.nth(1, 1)})*U*V + ({p.nth(1, 0)})*U + ({p.nth(0, 1)})*V + ({p.nth(0, 0)})')

if __name__ == '__main__':
    main()