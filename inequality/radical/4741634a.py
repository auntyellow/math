from numpy import sqrt
import numpy as np
import matplotlib.pyplot as plt

def z(u, v):
    # a = 1 + u, b = 1 + v
    # ...A + ...B - ...C - ...ABC (a <= b, c)
    # z0 = -4*u**6*v**4*sqrt(v + 2) + 2*u**6*v**4*sqrt(u + v + 2) - 2*u**6*v**3*sqrt(u + 2) - 22*u**6*v**3*sqrt(v + 2) + 14*u**6*v**3*sqrt(u + v + 2) - 12*u**6*v**2*sqrt(u + 2) - 42*u**6*v**2*sqrt(v + 2) + 36*u**6*v**2*sqrt(u + v + 2) - 24*u**6*v*sqrt(u + 2) - 32*u**6*v*sqrt(v + 2) + 40*u**6*v*sqrt(u + v + 2) - 16*u**6*sqrt(u + 2) - 8*u**6*sqrt(v + 2) + 16*u**6*sqrt(u + v + 2) - 4*u**5*v**5*sqrt(v + 2) + 4*u**5*v**5*sqrt(u + v + 2) - 6*u**5*v**4*sqrt(u + 2) - 54*u**5*v**4*sqrt(v + 2) + 50*u**5*v**4*sqrt(u + v + 2) + 5*u**5*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 42*u**5*v**3*sqrt(u + 2) - 214*u**5*v**3*sqrt(v + 2) + 226*u**5*v**3*sqrt(u + v + 2) + 25*u**5*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 124*u**5*v**2*sqrt(u + 2) - 348*u**5*v**2*sqrt(v + 2) + 472*u**5*v**2*sqrt(u + v + 2) + 40*u**5*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 184*u**5*v*sqrt(u + 2) - 232*u**5*v*sqrt(v + 2) + 456*u**5*v*sqrt(u + v + 2) + 20*u**5*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 112*u**5*sqrt(u + 2) - 48*u**5*sqrt(v + 2) + 160*u**5*sqrt(u + v + 2) + 2*u**4*v**6*sqrt(u + v + 2) - 6*u**4*v**5*sqrt(u + 2) - 22*u**4*v**5*sqrt(v + 2) + 34*u**4*v**5*sqrt(u + v + 2) + 10*u**4*v**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 70*u**4*v**4*sqrt(u + 2) - 210*u**4*v**4*sqrt(v + 2) + 292*u**4*v**4*sqrt(u + v + 2) + 95*u**4*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 300*u**4*v**3*sqrt(u + 2) - 688*u**4*v**3*sqrt(v + 2) + 1156*u**4*v**3*sqrt(u + v + 2) + 305*u**4*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 652*u**4*v**2*sqrt(u + 2) - 964*u**4*v**2*sqrt(v + 2) + 2216*u**4*v**2*sqrt(u + v + 2) + 400*u**4*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 772*u**4*v*sqrt(u + 2) - 528*u**4*v*sqrt(v + 2) + 1984*u**4*v*sqrt(u + v + 2) + 180*u**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 408*u**4*sqrt(u + 2) - 64*u**4*sqrt(v + 2) + 640*u**4*sqrt(u + v + 2) - 2*u**3*v**6*sqrt(u + 2) + 2*u**3*v**6*sqrt(v + 2) + 14*u**3*v**6*sqrt(u + v + 2) + 5*u**3*v**5*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 46*u**3*v**5*sqrt(u + 2) - 18*u**3*v**5*sqrt(v + 2) + 130*u**3*v**5*sqrt(u + v + 2) + 95*u**3*v**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 332*u**3*v**4*sqrt(u + 2) - 212*u**3*v**4*sqrt(v + 2) + 808*u**3*v**4*sqrt(u + v + 2) + 614*u**3*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 1136*u**3*v**3*sqrt(u + 2) - 620*u**3*v**3*sqrt(v + 2) + 2856*u**3*v**3*sqrt(u + v + 2) + 1572*u**3*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 2104*u**3*v**2*sqrt(u + 2) - 652*u**3*v**2*sqrt(v + 2) + 5148*u**3*v**2*sqrt(u + v + 2) + 1752*u**3*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 2128*u**3*v*sqrt(u + 2) - 64*u**3*v*sqrt(v + 2) + 4368*u**3*v*sqrt(u + v + 2) + 704*u**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 960*u**3*sqrt(u + 2) + 160*u**3*sqrt(v + 2) + 1328*u**3*sqrt(u + v + 2) - 6*u**2*v**6*sqrt(u + 2) + 12*u**2*v**6*sqrt(v + 2) + 36*u**2*v**6*sqrt(u + v + 2) + 25*u**2*v**5*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 100*u**2*v**5*sqrt(u + 2) + 104*u**2*v**5*sqrt(v + 2) + 268*u**2*v**5*sqrt(u + v + 2) + 305*u**2*v**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 636*u**2*v**4*sqrt(u + 2) + 416*u**2*v**4*sqrt(v + 2) + 1272*u**2*v**4*sqrt(u + v + 2) + 1572*u**2*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 2036*u**2*v**3*sqrt(u + 2) + 1004*u**2*v**3*sqrt(v + 2) + 3912*u**2*v**3*sqrt(u + v + 2) + 3516*u**2*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 3560*u**2*v**2*sqrt(u + 2) + 1560*u**2*v**2*sqrt(v + 2) + 6568*u**2*v**2*sqrt(u + v + 2) + 3536*u**2*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 3328*u**2*v*sqrt(u + 2) + 1456*u**2*v*sqrt(v + 2) + 5296*u**2*v*sqrt(u + v + 2) + 1312*u**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 1344*u**2*sqrt(u + 2) + 576*u**2*sqrt(v + 2) + 1536*u**2*sqrt(u + v + 2) + 24*u*v**6*sqrt(v + 2) + 40*u*v**6*sqrt(u + v + 2) + 40*u*v**5*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 40*u*v**5*sqrt(u + 2) + 248*u*v**5*sqrt(v + 2) + 280*u*v**5*sqrt(u + v + 2) + 400*u*v**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 384*u*v**4*sqrt(u + 2) + 1056*u*v**4*sqrt(v + 2) + 1116*u*v**4*sqrt(u + v + 2) + 1752*u*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 1440*u*v**3*sqrt(u + 2) + 2368*u*v**3*sqrt(v + 2) + 2960*u*v**3*sqrt(u + v + 2) + 3536*u*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 2672*u*v**2*sqrt(u + 2) + 3008*u*v**2*sqrt(v + 2) + 4544*u*v**2*sqrt(u + v + 2) + 3296*u*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 2496*u*v*sqrt(u + 2) + 2112*u*v*sqrt(v + 2) + 3456*u*v*sqrt(u + v + 2) + 1152*u*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 960*u*sqrt(u + 2) + 640*u*sqrt(v + 2) + 960*u*sqrt(u + v + 2) + 8*v**6*sqrt(u + 2) + 16*v**6*sqrt(v + 2) + 16*v**6*sqrt(u + v + 2) + 20*v**5*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) + 48*v**5*sqrt(u + 2) + 160*v**5*sqrt(v + 2) + 112*v**5*sqrt(u + v + 2) + 180*v**4*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) + 64*v**4*sqrt(u + 2) + 640*v**4*sqrt(v + 2) + 408*v**4*sqrt(u + v + 2) + 704*v**3*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 160*v**3*sqrt(u + 2) + 1328*v**3*sqrt(v + 2) + 960*v**3*sqrt(u + v + 2) + 1312*v**2*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 576*v**2*sqrt(u + 2) + 1536*v**2*sqrt(v + 2) + 1344*v**2*sqrt(u + v + 2) + 1152*v*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 640*v*sqrt(u + 2) + 960*v*sqrt(v + 2) + 960*v*sqrt(u + v + 2) + 384*sqrt(u + 2)*sqrt(v + 2)*sqrt(u + v + 2) - 256*sqrt(u + 2) + 256*sqrt(v + 2) + 256*sqrt(u + v + 2)
    # h
    # z0 = 4*u**11*v**7 + 48*u**11*v**6 + 240*u**11*v**5 + 640*u**11*v**4 + 960*u**11*v**3 + 768*u**11*v**2 + 256*u**11*v + 32*u**10*v**8 - 16*u**10*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 448*u**10*v**7 - 168*u**10*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 2711*u**10*v**6 - 716*u**10*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 9222*u**10*v**5 - 1556*u**10*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 19123*u**10*v**4 - 1728*u**10*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 24328*u**10*v**3 - 736*u**10*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 17848*u**10*v**2 + 192*u**10*v*sqrt(v + 2)*sqrt(u + v + 2) + 6208*u**10*v + 192*u**10*sqrt(v + 2)*sqrt(u + v + 2) + 432*u**10 + 40*u**9*v**9 - 32*u**9*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 880*u**9*v**8 - 576*u**9*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 7700*u**9*v**7 - 3896*u**9*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 36550*u**9*v**6 - 13400*u**9*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 105228*u**9*v**5 - 25360*u**9*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 190926*u**9*v**4 - 25136*u**9*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 216016*u**9*v**3 - 8864*u**9*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 141872*u**9*v**2 + 3904*u**9*v*sqrt(v + 2)*sqrt(u + v + 2) + 43648*u**9*v + 2944*u**9*sqrt(v + 2)*sqrt(u + v + 2) + 2016*u**9 + 16*u**8*v**10 - 16*u**8*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 592*u**8*v**9 - 448*u**8*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 7834*u**8*v**8 - 5208*u**8*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 53636*u**8*v**7 - 29280*u**8*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 217653*u**8*v**6 - 88908*u**8*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 554198*u**8*v**5 - 148972*u**8*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 896015*u**8*v**4 - 121952*u**8*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 890680*u**8*v**3 - 12552*u**8*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 486872*u**8*v**2 + 48288*u**8*v*sqrt(v + 2)*sqrt(u + v + 2) + 96384*u**8*v + 23456*u**8*sqrt(v + 2)*sqrt(u + v + 2) - 14352*u**8 + 4*u**7*v**11 + 192*u**7*v**10 - 160*u**7*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 3660*u**7*v**9 - 2464*u**7*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 34484*u**7*v**8 - 20888*u**7*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 190008*u**7*v**7 - 99400*u**7*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 654564*u**7*v**6 - 262336*u**7*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 1430732*u**7*v**5 - 355104*u**7*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 1923792*u**7*v**4 - 131464*u**7*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 1403152*u**7*v**3 + 252392*u**7*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 261632*u**7*v**2 + 327296*u**7*v*sqrt(v + 2)*sqrt(u + v + 2) - 318608*u**7*v + 117024*u**7*sqrt(v + 2)*sqrt(u + v + 2) - 169248*u**7 + 48*u**6*v**11 + 8*u**6*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 1047*u**6*v**10 - 540*u**6*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 12486*u**6*v**9 - 5884*u**6*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 83213*u**6*v**8 - 34576*u**6*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 333796*u**6*v**7 - 119192*u**6*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 802922*u**6*v**6 - 180192*u**6*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 963368*u**6*v**5 + 154584*u**6*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 239280*u**6*v**4 + 1088360*u**6*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 2672224*u**6*v**3 + 1798832*u**6*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 3995344*u**6*v**2 + 1348448*u**6*v*sqrt(v + 2)*sqrt(u + v + 2) - 2732352*u**6*v + 393152*u**6*sqrt(v + 2)*sqrt(u + v + 2) - 753344*u**6 + 248*u**5*v**11 + 88*u**5*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 3526*u**5*v**10 - 176*u**5*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 27228*u**5*v**9 - 296*u**5*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 107590*u**5*v**8 + 28304*u**5*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 114604*u**5*v**7 + 248496*u**5*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 865912*u**5*v**6 + 1118264*u**5*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 4729936*u**5*v**5 + 3116600*u**5*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 11916096*u**5*v**4 + 5502208*u**5*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 17900512*u**5*v**3 + 5946752*u**5*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 16420288*u**5*v**2 + 3572736*u**5*v*sqrt(v + 2)*sqrt(u + v + 2) - 8539904*u**5*v + 909696*u**5*sqrt(v + 2)*sqrt(u + v + 2) - 1944064*u**5 + 720*u**4*v**11 + 400*u**4*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 8299*u**4*v**10 + 3740*u**4*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 45246*u**4*v**9 + 33444*u**4*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 68991*u**4*v**8 + 243296*u**4*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 627536*u**4*v**7 + 1190192*u**4*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 4620576*u**4*v**6 + 3879000*u**4*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 15452672*u**4*v**5 + 8507760*u**4*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 31255664*u**4*v**4 + 12431616*u**4*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 40396512*u**4*v**3 + 11579776*u**4*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 32831040*u**4*v**2 + 6195200*u**4*v*sqrt(v + 2)*sqrt(u + v + 2) - 15376512*u**4*v + 1441280*u**4*sqrt(v + 2)*sqrt(u + v + 2) - 3183104*u**4 + 1280*u**3*v**11 + 960*u**3*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 14024*u**3*v**10 + 11488*u**3*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 67184*u**3*v**9 + 86800*u**3*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 56248*u**3*v**8 + 493904*u**3*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 1136352*u**3*v**7 + 2050720*u**3*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 7077952*u**3*v**6 + 5979264*u**3*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 21841872*u**3*v**5 + 11984576*u**3*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 41450432*u**3*v**4 + 16142336*u**3*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 50511872*u**3*v**3 + 13945216*u**3*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 38767360*u**3*v**2 + 6966016*u**3*v*sqrt(v + 2)*sqrt(u + v + 2) - 17155072*u**3*v + 1524736*u**3*sqrt(v + 2)*sqrt(u + v + 2) - 3354624*u**3 + 1408*u**2*v**11 + 1280*u**2*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 16120*u**2*v**10 + 15840*u**2*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 81776*u**2*v**9 + 106176*u**2*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 138328*u**2*v**8 + 513376*u**2*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 702272*u**2*v**7 + 1884224*u**2*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 5257504*u**2*v**6 + 5073472*u**2*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 16500064*u**2*v**5 + 9612928*u**2*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 30891008*u**2*v**4 + 12348160*u**2*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 36723968*u**2*v**3 + 10200576*u**2*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 27339264*u**2*v**2 + 4878336*u**2*v*sqrt(v + 2)*sqrt(u + v + 2) - 11692544*u**2*v + 1024000*u**2*sqrt(v + 2)*sqrt(u + v + 2) - 2203648*u**2 + 896*u*v**11 + 896*u*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 11072*u*v**10 + 10880*u*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 62208*u*v**9 + 66112*u*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 165248*u*v**8 + 279232*u*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 25648*u*v**7 + 914432*u*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 1730848*u*v**6 + 2290304*u*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 6257664*u*v**5 + 4152576*u*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 12107392*u*v**4 + 5166848*u*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 14415360*u*v**3 + 4148224*u*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 10605056*u*v**2 + 1928192*u*v*sqrt(v + 2)*sqrt(u + v + 2) - 4450304*u*v + 393216*u*sqrt(v + 2)*sqrt(u + v + 2) - 819200*u + 256*v**11 + 256*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 3376*v**10 + 3008*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 20448*v**9 + 16832*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 66800*v**8 + 63104*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 93984*v**7 + 184576*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 125760*v**6 + 429440*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 863488*v**5 + 748544*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 1884160*v**4 + 910336*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 2327552*v**3 + 717824*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 1726464*v**2 + 327680*v*sqrt(v + 2)*sqrt(u + v + 2) - 720896*v + 65536*sqrt(v + 2)*sqrt(u + v + 2) - 131072
    # ...AB - ... (a <= b, c)
    z0 = 4*u**11*v**7 + 48*u**11*v**6 + 240*u**11*v**5 + 640*u**11*v**4 + 960*u**11*v**3 + 768*u**11*v**2 + 256*u**11*v + 32*u**10*v**8 + 16*u**10*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 448*u**10*v**7 + 168*u**10*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 2711*u**10*v**6 + 716*u**10*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 9222*u**10*v**5 + 1556*u**10*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 19123*u**10*v**4 + 1728*u**10*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 24328*u**10*v**3 + 736*u**10*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 17848*u**10*v**2 - 192*u**10*v*sqrt(v + 2)*sqrt(u + v + 2) + 6208*u**10*v - 192*u**10*sqrt(v + 2)*sqrt(u + v + 2) + 432*u**10 + 40*u**9*v**9 + 32*u**9*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 880*u**9*v**8 + 576*u**9*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 7700*u**9*v**7 + 3896*u**9*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 36550*u**9*v**6 + 13400*u**9*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 105228*u**9*v**5 + 25360*u**9*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 190926*u**9*v**4 + 25136*u**9*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 216016*u**9*v**3 + 8864*u**9*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 141872*u**9*v**2 - 3904*u**9*v*sqrt(v + 2)*sqrt(u + v + 2) + 43648*u**9*v - 2944*u**9*sqrt(v + 2)*sqrt(u + v + 2) + 2016*u**9 + 16*u**8*v**10 + 16*u**8*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 592*u**8*v**9 + 448*u**8*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 7834*u**8*v**8 + 5208*u**8*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 53636*u**8*v**7 + 29280*u**8*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 217653*u**8*v**6 + 88908*u**8*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 554198*u**8*v**5 + 148972*u**8*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 896015*u**8*v**4 + 121952*u**8*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 890680*u**8*v**3 + 12552*u**8*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 486872*u**8*v**2 - 48288*u**8*v*sqrt(v + 2)*sqrt(u + v + 2) + 96384*u**8*v - 23456*u**8*sqrt(v + 2)*sqrt(u + v + 2) - 14352*u**8 + 4*u**7*v**11 + 192*u**7*v**10 + 160*u**7*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 3660*u**7*v**9 + 2464*u**7*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 34484*u**7*v**8 + 20888*u**7*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 190008*u**7*v**7 + 99400*u**7*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 654564*u**7*v**6 + 262336*u**7*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 1430732*u**7*v**5 + 355104*u**7*v**4*sqrt(v + 2)*sqrt(u + v + 2) + 1923792*u**7*v**4 + 131464*u**7*v**3*sqrt(v + 2)*sqrt(u + v + 2) + 1403152*u**7*v**3 - 252392*u**7*v**2*sqrt(v + 2)*sqrt(u + v + 2) + 261632*u**7*v**2 - 327296*u**7*v*sqrt(v + 2)*sqrt(u + v + 2) - 318608*u**7*v - 117024*u**7*sqrt(v + 2)*sqrt(u + v + 2) - 169248*u**7 + 48*u**6*v**11 - 8*u**6*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 1047*u**6*v**10 + 540*u**6*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 12486*u**6*v**9 + 5884*u**6*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 83213*u**6*v**8 + 34576*u**6*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 333796*u**6*v**7 + 119192*u**6*v**6*sqrt(v + 2)*sqrt(u + v + 2) + 802922*u**6*v**6 + 180192*u**6*v**5*sqrt(v + 2)*sqrt(u + v + 2) + 963368*u**6*v**5 - 154584*u**6*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 239280*u**6*v**4 - 1088360*u**6*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 2672224*u**6*v**3 - 1798832*u**6*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 3995344*u**6*v**2 - 1348448*u**6*v*sqrt(v + 2)*sqrt(u + v + 2) - 2732352*u**6*v - 393152*u**6*sqrt(v + 2)*sqrt(u + v + 2) - 753344*u**6 + 248*u**5*v**11 - 88*u**5*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 3526*u**5*v**10 + 176*u**5*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 27228*u**5*v**9 + 296*u**5*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 107590*u**5*v**8 - 28304*u**5*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 114604*u**5*v**7 - 248496*u**5*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 865912*u**5*v**6 - 1118264*u**5*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 4729936*u**5*v**5 - 3116600*u**5*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 11916096*u**5*v**4 - 5502208*u**5*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 17900512*u**5*v**3 - 5946752*u**5*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 16420288*u**5*v**2 - 3572736*u**5*v*sqrt(v + 2)*sqrt(u + v + 2) - 8539904*u**5*v - 909696*u**5*sqrt(v + 2)*sqrt(u + v + 2) - 1944064*u**5 + 720*u**4*v**11 - 400*u**4*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 8299*u**4*v**10 - 3740*u**4*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 45246*u**4*v**9 - 33444*u**4*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 68991*u**4*v**8 - 243296*u**4*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 627536*u**4*v**7 - 1190192*u**4*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 4620576*u**4*v**6 - 3879000*u**4*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 15452672*u**4*v**5 - 8507760*u**4*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 31255664*u**4*v**4 - 12431616*u**4*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 40396512*u**4*v**3 - 11579776*u**4*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 32831040*u**4*v**2 - 6195200*u**4*v*sqrt(v + 2)*sqrt(u + v + 2) - 15376512*u**4*v - 1441280*u**4*sqrt(v + 2)*sqrt(u + v + 2) - 3183104*u**4 + 1280*u**3*v**11 - 960*u**3*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 14024*u**3*v**10 - 11488*u**3*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 67184*u**3*v**9 - 86800*u**3*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 56248*u**3*v**8 - 493904*u**3*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 1136352*u**3*v**7 - 2050720*u**3*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 7077952*u**3*v**6 - 5979264*u**3*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 21841872*u**3*v**5 - 11984576*u**3*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 41450432*u**3*v**4 - 16142336*u**3*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 50511872*u**3*v**3 - 13945216*u**3*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 38767360*u**3*v**2 - 6966016*u**3*v*sqrt(v + 2)*sqrt(u + v + 2) - 17155072*u**3*v - 1524736*u**3*sqrt(v + 2)*sqrt(u + v + 2) - 3354624*u**3 + 1408*u**2*v**11 - 1280*u**2*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 16120*u**2*v**10 - 15840*u**2*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 81776*u**2*v**9 - 106176*u**2*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 138328*u**2*v**8 - 513376*u**2*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 702272*u**2*v**7 - 1884224*u**2*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 5257504*u**2*v**6 - 5073472*u**2*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 16500064*u**2*v**5 - 9612928*u**2*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 30891008*u**2*v**4 - 12348160*u**2*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 36723968*u**2*v**3 - 10200576*u**2*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 27339264*u**2*v**2 - 4878336*u**2*v*sqrt(v + 2)*sqrt(u + v + 2) - 11692544*u**2*v - 1024000*u**2*sqrt(v + 2)*sqrt(u + v + 2) - 2203648*u**2 + 896*u*v**11 - 896*u*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 11072*u*v**10 - 10880*u*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 62208*u*v**9 - 66112*u*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 165248*u*v**8 - 279232*u*v**7*sqrt(v + 2)*sqrt(u + v + 2) - 25648*u*v**7 - 914432*u*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 1730848*u*v**6 - 2290304*u*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 6257664*u*v**5 - 4152576*u*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 12107392*u*v**4 - 5166848*u*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 14415360*u*v**3 - 4148224*u*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 10605056*u*v**2 - 1928192*u*v*sqrt(v + 2)*sqrt(u + v + 2) - 4450304*u*v - 393216*u*sqrt(v + 2)*sqrt(u + v + 2) - 819200*u + 256*v**11 - 256*v**10*sqrt(v + 2)*sqrt(u + v + 2) + 3376*v**10 - 3008*v**9*sqrt(v + 2)*sqrt(u + v + 2) + 20448*v**9 - 16832*v**8*sqrt(v + 2)*sqrt(u + v + 2) + 66800*v**8 - 63104*v**7*sqrt(v + 2)*sqrt(u + v + 2) + 93984*v**7 - 184576*v**6*sqrt(v + 2)*sqrt(u + v + 2) - 125760*v**6 - 429440*v**5*sqrt(v + 2)*sqrt(u + v + 2) - 863488*v**5 - 748544*v**4*sqrt(v + 2)*sqrt(u + v + 2) - 1884160*v**4 - 910336*v**3*sqrt(v + 2)*sqrt(u + v + 2) - 2327552*v**3 - 717824*v**2*sqrt(v + 2)*sqrt(u + v + 2) - 1726464*v**2 - 327680*v*sqrt(v + 2)*sqrt(u + v + 2) - 720896*v - 65536*sqrt(v + 2)*sqrt(u + v + 2) - 131072
    z0[z0 >= 0] = np.log(1 + z0[z0 >= 0])
    z0[z0 < 0] = -np.log(1 - z0[z0 < 0])
    return z0

def main():
    U, V = np.meshgrid(np.linspace(0.0, 10.0, 1000), np.linspace(0.0, 10.0, 1000))
    plt.imshow(z(U, V), origin='lower', extent = [0, 10, 0, 10], cmap=plt.cm.hsv)
    plt.colorbar()
    plt.show()

if __name__ == '__main__':
    main()