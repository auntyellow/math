from numpy import sqrt
import numpy as np
import matplotlib.pyplot as plt

def z(u, v):
    # f
    # z0 = u*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + u*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) - sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5)
    # h
    # z0 = 384*u**7 + 96*u**6*v**2 + 1344*u**6*v + 2624*u**6 + 288*u**5*v**3 + 2528*u**5*v**2 + 7872*u**5*v + 64*u**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 7968*u**5 + 320*u**4*v**4 + 2960*u**4*v**3 + 16*u**4*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 11024*u**4*v**2 + 160*u**4*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 19920*u**4*v + 336*u**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 13872*u**4 - 8*u**3*v**6 + 160*u**3*v**5 + 2008*u**3*v**4 + 32*u**3*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 8928*u**3*v**3 + 224*u**3*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 21288*u**3*v**2 + 672*u**3*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 27744*u**3*v + 736*u**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 14920*u**3 - 12*u**2*v**7 + 20*u**2*v**6 + 724*u**2*v**5 + 24*u**2*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 4052*u**2*v**4 + 176*u**2*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 12012*u**2*v**3 + 608*u**2*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 21516*u**2*v**2 + 1104*u**2*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 22380*u**2*v + 840*u**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 9900*u**2 - 6*u*v**8 - 12*u*v**7 + 108*u*v**6 + 8*u*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 900*u*v**5 + 68*u*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 3360*u*v**4 + 272*u*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 7644*u*v**3 + 616*u*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 11220*u*v**2 + 840*u*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 9900*u*v + 500*u*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 3750*u - v**9 - 3*v**8 + v**6*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 72*v**6 + 10*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 342*v**5 + 43*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1002*v**4 + 124*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1880*v**3 + 215*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 2400*v**2 + 250*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1875*v + 125*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 625
    # h1
    z0 = 64*u**6*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 64*u**6*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 16*u**5*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 16*u**5*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 224*u**5*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 160*u**5*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 32*u**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 400*u**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 400*u**5*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 48*u**4*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 32*u**4*v**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 8*u**4*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 400*u**4*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 240*u**4*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 96*u**4*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1168*u**4*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 832*u**4*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 160*u**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1072*u**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1072*u**4*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 56*u**3*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 24*u**3*v**4*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 20*u**3*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 432*u**3*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 208*u**3*v**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 144*u**3*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1504*u**3*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 832*u**3*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 380*u**3*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 2512*u**3*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1776*u**3*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 336*u**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1576*u**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1576*u**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 32*u**2*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 8*u**2*v**5*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 18*u**2*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 268*u**2*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 92*u**2*v**4*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 122*u**2*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1056*u**2*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 448*u**2*v**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 382*u**2*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 2328*u**2*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1224*u**2*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 590*u**2*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 2784*u**2*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1944*u**2*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 368*u**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1340*u**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1340*u**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 9*u*v**6*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + u*v**6*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 7*u*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 86*u*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 18*u*v**5*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 52*u*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 383*u*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 111*u*v**4*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 184*u*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1012*u*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 396*u*v**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 370*u*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1671*u*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 831*u*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 425*u*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 1590*u*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 1090*u*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 210*u*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 625*u*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 625*u*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + v**7*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + v**6*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 11*v**6*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + v**6*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 8*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 53*v**5*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 10*v**5*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 32*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 167*v**4*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 43*v**4*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 80*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 339*v**3*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 124*v**3*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 125*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 465*v**2*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 215*v**2*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 120*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 375*v*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 250*v*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 50*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5) + 125*sqrt(4*u + v**2 + 2*v + 5)*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 2*v + 5) + 125*sqrt(4*u**2 + 4*u*v + 8*u + v**2 + 6*v + 5)
    z0[z0 >= 0] = np.log(1 + z0[z0 >= 0])
    z0[z0 < 0] = -np.log(1 - z0[z0 < 0])
    return z0

def main():
    U, V = np.meshgrid(np.linspace(0.0, 3.0, 300), np.linspace(0.0, 3.0, 300))
    plt.imshow(z(U, V), origin='lower', extent = [0, 3, 0, 3], cmap=plt.cm.hsv)
    plt.colorbar()
    plt.show()

if __name__ == '__main__':
    main()