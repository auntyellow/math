from sympy import *
from homogeneous import *

def main():
    # https://math.stackexchange.com/q/4523868
    A1, B1, C1, H = (1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 1, 1)
    A1B1, B1C1, C1A1 = cross(A1, B1), cross(B1, C1), cross(C1, A1)
    AD, BE, CF = cross(A1, H), cross(B1, H), cross(C1, H)
    D, E, F = cross(AD, B1C1), cross(BE, C1A1), cross(CF, A1B1)
    print('D =', D)
    print('E =', E)
    print('F =', F)
    G = cross(AD, cross(E, F))
    print('G =', G)
    m = symbols('m')
    A = span(m, A1, 1, D)
    m = solve(Eq(cross_ratio(A, D, A1, G), -1), m)
    print('m =', m)
    A = span(m[0], A1, 1, D)
    print('A =', A)
    B, C = (1, 4, 1), (1, 1, 4)
    AF, BG, CE = cross(A, F), cross(B, G), cross(C, E)
    print('AF =', AF)
    print('BG =', BG)
    print('CE =', CE)
    print('Are AF, BG and CE concurrent?', incidence(AF, BG, CE) == 0)
    print()
    # proof by barycentrics coordinates
    a, b, c = symbols('a, b, c')
    A1, B1, C1 = (1, 0, 0), (0, 1, 0), (0, 0, 1)
    # https://faculty.evansville.edu/ck6/encyclopedia/ETC.html , X7
    Ge = (1/(b + c - a), 1/(c + a - b), 1/(a + b - c))
    A1B1, B1C1, C1A1 = cross(A1, B1), cross(B1, C1), cross(C1, A1)
    AD, BE, CF = cross(A1, Ge), cross(B1, Ge), cross(C1, Ge)
    D, E, F = cross(AD, B1C1), cross(BE, C1A1), cross(CF, A1B1)
    print('D =', D)
    print('E =', E)
    print('F =', F)
    G = cross(AD, cross(E, F))
    print('G =', G)
    m = symbols('m')
    A = span(m, A1, 1, D)
    m = solve(Eq(cross_ratio(A, D, A1, G), -1), m)
    print('m =', m)
    A = span(m[0], A1, 1, D)
    print('A =', A)
    # A = (-4/(a - b - c), 1/(a - b + c), 1/(a + b - c))
    B = (1/(b + c - a), -4/(b - c - a), 1/(b - c + a))
    C = (1/(c - a + b), 1/(c + a - b), -4/(c - a - b))
    print('B =', B)
    print('C =', C)
    AF, BG, CE = cross(A, F), cross(B, G), cross(C, E)
    print('AF =', AF)
    print('BG =', BG)
    print('CE =', CE)
    print('Are AF, BG and CE concurrent?', incidence(AF, BG, CE) == 0)

if __name__ == '__main__':
    main()